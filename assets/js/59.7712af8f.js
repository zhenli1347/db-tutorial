(window.webpackJsonp=window.webpackJsonp||[]).push([[59],{393:function(t,s,a){"use strict";a.r(s);var n=a(4),e=Object(n.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"elasticsearch-查询"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#elasticsearch-查询"}},[t._v("#")]),t._v(" Elasticsearch 查询")]),t._v(" "),s("p",[t._v("Elasticsearch 查询语句采用基于 RESTful 风格的接口封装成 JSON 格式的对象，称之为 Query DSL。Elasticsearch 查询分类大致分为"),s("strong",[t._v("全文查询")]),t._v("、"),s("strong",[t._v("词项查询")]),t._v("、"),s("strong",[t._v("复合查询")]),t._v("、"),s("strong",[t._v("嵌套查询")]),t._v("、"),s("strong",[t._v("位置查询")]),t._v("、"),s("strong",[t._v("特殊查询")]),t._v("。Elasticsearch 查询从机制分为两种，一种是根据用户输入的查询词，通过排序模型计算文档与查询词之间的"),s("strong",[t._v("相关度")]),t._v("，并根据评分高低排序返回；另一种是"),s("strong",[t._v("过滤机制")]),t._v("，只根据过滤条件对文档进行过滤，不计算评分，速度相对较快。")]),t._v(" "),s("h2",{attrs:{id:"全文查询"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#全文查询"}},[t._v("#")]),t._v(" 全文查询")]),t._v(" "),s("p",[t._v("ES 全文查询主要用于在全文字段上，主要考虑查询词与文档的相关性（Relevance）。")]),t._v(" "),s("h3",{attrs:{id:"intervals-query"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#intervals-query"}},[t._v("#")]),t._v(" intervals query")]),t._v(" "),s("p",[s("a",{attrs:{href:"https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-intervals-query.html",target:"_blank",rel:"noopener noreferrer"}},[s("strong",[s("code",[t._v("intervals query")])]),s("OutboundLink")],1),t._v(" 根据匹配词的顺序和近似度返回文档。")]),t._v(" "),s("p",[t._v("intervals query 使用"),s("strong",[t._v("匹配规则")]),t._v("，这些规则应用于指定字段中的 term。")]),t._v(" "),s("p",[t._v("示例：下面示例搜索 "),s("code",[t._v("query")]),t._v(" 字段，搜索值是 "),s("code",[t._v("my favorite food")]),t._v("，没有任何间隙；然后是 "),s("code",[t._v("my_text")]),t._v(" 字段搜索匹配 "),s("code",[t._v("hot water")]),t._v("、"),s("code",[t._v("cold porridge")]),t._v(" 的 term。")]),t._v(" "),s("p",[t._v("当 my_text 中的值为 "),s("code",[t._v("my favorite food is cold porridge")]),t._v(" 时，会匹配成功，但是 "),s("code",[t._v("when it's cold my favorite food is porridge")]),t._v(" 则匹配失败")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("POST _search\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"query"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"intervals"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"my_text"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"all_of"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ordered"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" true,\n          "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"intervals"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n              "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"match"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"query"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"my favorite food"')]),t._v(",\n                "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"max_gaps"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(",\n                "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ordered"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n              "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(",\n            "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n              "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"any_of"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"intervals"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n                  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"match"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"query"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hot water"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(",\n                  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"match"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"query"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"cold porridge"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n              "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h3",{attrs:{id:"match-query"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#match-query"}},[t._v("#")]),t._v(" match query")]),t._v(" "),s("p",[s("a",{attrs:{href:"https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-match-query.html",target:"_blank",rel:"noopener noreferrer"}},[s("strong",[s("code",[t._v("match query")])]),s("OutboundLink")],1),t._v(" "),s("strong",[t._v("用于搜索单个字段")]),t._v("，首先会针对查询语句进行解析（经过 analyzer），主要是对查询语句进行分词，分词后查询语句的任何一个词项被匹配，文档就会被搜到，默认情况下相当于对分词后词项进行 or 匹配操作。")]),t._v(" "),s("p",[s("a",{attrs:{href:"https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-match-query.html",target:"_blank",rel:"noopener noreferrer"}},[s("strong",[s("code",[t._v("match query")])]),s("OutboundLink")],1),t._v(" 是执行全文搜索的标准查询，包括模糊匹配选项。")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("GET kibana_sample_data_ecommerce/_search\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"query"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"match"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"customer_full_name"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"query"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"George Hubbard"')]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("等同于 "),s("code",[t._v("or")]),t._v(" 匹配操作，如下：")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("GET kibana_sample_data_ecommerce/_search\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"query"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"match"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"customer_full_name"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"query"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"George Hubbard"')]),t._v(",\n        "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"operator"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"or"')]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h4",{attrs:{id:"match-query-简写"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#match-query-简写"}},[t._v("#")]),t._v(" match query 简写")]),t._v(" "),s("p",[t._v("可以通过组合 "),s("code",[t._v("<field>")]),t._v(" 和 "),s("code",[t._v("query")]),t._v(" 参数来简化匹配查询语法。")]),t._v(" "),s("p",[t._v("示例：")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("GET /_search\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"query"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"match"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"message"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"this is a test"')]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h4",{attrs:{id:"match-query-如何工作"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#match-query-如何工作"}},[t._v("#")]),t._v(" match query 如何工作")]),t._v(" "),s("p",[t._v("匹配查询是布尔类型。这意味着会对提供的文本进行分析，分析过程从提供的文本构造一个布尔查询。 "),s("code",[t._v("operator")]),t._v(" 参数可以设置为 "),s("code",[t._v("or")]),t._v(" 或 "),s("code",[t._v("and")]),t._v(" 来控制布尔子句（默认为 "),s("code",[t._v("or")]),t._v("）。可以使用 "),s("a",{attrs:{href:"https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-minimum-should-match.html",target:"_blank",rel:"noopener noreferrer"}},[s("code",[t._v("minimum_should_match")]),s("OutboundLink")],1),t._v(" 参数设置要匹配的可选 "),s("code",[t._v("should")]),t._v(" 子句的最小数量。")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("GET kibana_sample_data_ecommerce/_search\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"query"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"match"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"customer_full_name"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"query"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"George Hubbard"')]),t._v(",\n        "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"operator"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"and"')]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("可以设置 "),s("code",[t._v("analyzer")]),t._v(" 来控制哪个分析器将对文本执行分析过程。它默认为字段显式映射定义或默认搜索分析器。")]),t._v(" "),s("p",[s("code",[t._v("lenient")]),t._v(" 参数可以设置为 "),s("code",[t._v("true")]),t._v(" 以忽略由数据类型不匹配导致的异常，例如尝试使用文本查询字符串查询数字字段。默认为 "),s("code",[t._v("false")]),t._v("。")]),t._v(" "),s("h4",{attrs:{id:"match-query-的模糊查询"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#match-query-的模糊查询"}},[t._v("#")]),t._v(" match query 的模糊查询")]),t._v(" "),s("p",[s("code",[t._v("fuzziness")]),t._v(" 允许基于被查询字段的类型进行模糊匹配。请参阅 "),s("a",{attrs:{href:"https://www.elastic.co/guide/en/elasticsearch/reference/current/common-options.html#fuzziness",target:"_blank",rel:"noopener noreferrer"}},[t._v("Fuzziness"),s("OutboundLink")],1),t._v(" 的配置。")]),t._v(" "),s("p",[t._v("在这种情况下可以设置 "),s("code",[t._v("prefix_length")]),t._v(" 和 "),s("code",[t._v("max_expansions")]),t._v(" 来控制模糊匹配。如果设置了模糊选项，查询将使用 "),s("code",[t._v("top_terms_blended_freqs_${max_expansions}")]),t._v(" 作为其重写方法，"),s("code",[t._v("fuzzy_rewrite")]),t._v(" 参数允许控制查询将如何被重写。")]),t._v(" "),s("p",[t._v("默认情况下允许模糊倒转 ("),s("code",[t._v("ab")]),t._v(" → "),s("code",[t._v("ba")]),t._v(")，但可以通过将 "),s("code",[t._v("fuzzy_transpositions")]),t._v(" 设置为 "),s("code",[t._v("false")]),t._v(" 来禁用。")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("GET /_search\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"query"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"match"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"message"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"query"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"this is a testt"')]),t._v(",\n        "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"fuzziness"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"AUTO"')]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h4",{attrs:{id:"zero-terms-查询"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#zero-terms-查询"}},[t._v("#")]),t._v(" zero terms 查询")]),t._v(" "),s("p",[t._v("如果使用的分析器像 stop 过滤器一样删除查询中的所有标记，则默认行为是不匹配任何文档。可以使用 "),s("code",[t._v("zero_terms_query")]),t._v(" 选项来改变默认行为，它接受 "),s("code",[t._v("none")]),t._v("（默认）和 "),s("code",[t._v("all")]),t._v(" （相当于 "),s("code",[t._v("match_all")]),t._v(" 查询）。")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("GET /_search\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"query"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"match"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"message"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"query"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"to be or not to be"')]),t._v(",\n        "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"operator"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"and"')]),t._v(",\n        "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"zero_terms_query"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"all"')]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h3",{attrs:{id:"match-bool-prefix-query"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#match-bool-prefix-query"}},[t._v("#")]),t._v(" match_bool_prefix query")]),t._v(" "),s("p",[s("a",{attrs:{href:"https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-match-bool-prefix-query.html",target:"_blank",rel:"noopener noreferrer"}},[s("strong",[s("code",[t._v("match_bool_prefix query")])]),s("OutboundLink")],1),t._v(" 分析其输入并根据这些词构造一个布尔查询。除了最后一个术语之外的每个术语都用于术语查询。最后一个词用于 "),s("code",[t._v("prefix query")]),t._v("。")]),t._v(" "),s("p",[t._v("示例：")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("GET /_search\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"query"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"match_bool_prefix"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"message"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"quick brown f"')]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("等价于")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("GET /_search\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"query"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"bool"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"should"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"term"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"message"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"quick"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(",\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"term"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"message"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"brown"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(",\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"prefix"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"message"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"f"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[s("code",[t._v("match_bool_prefix query")]),t._v(" 和 "),s("code",[t._v("match_phrase_prefix query")]),t._v(" 之间的一个重要区别是："),s("code",[t._v("match_phrase_prefix query")]),t._v(" 将其 term 匹配为短语，但 "),s("code",[t._v("match_bool_prefix query")]),t._v(" 可以在任何位置匹配其 term。")]),t._v(" "),s("p",[t._v("上面的示例 "),s("code",[t._v("match_bool_prefix query")]),t._v(" 查询可以匹配包含 "),s("code",[t._v("quick brown fox")]),t._v(" 的字段，但它也可以快速匹配 "),s("code",[t._v("brown fox")]),t._v("。它还可以匹配包含 "),s("code",[t._v("quick")]),t._v("、"),s("code",[t._v("brown")]),t._v(" 和以 "),s("code",[t._v("f")]),t._v(" 开头的字段，出现在任何位置。")]),t._v(" "),s("h3",{attrs:{id:"match-phrase-query"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#match-phrase-query"}},[t._v("#")]),t._v(" match_phrase query")]),t._v(" "),s("p",[s("a",{attrs:{href:"https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-match-query-phrase.html",target:"_blank",rel:"noopener noreferrer"}},[s("strong",[s("code",[t._v("match_phrase query")])]),s("OutboundLink")],1),t._v(" 即短语匹配，首先会把 query 内容分词，分词器可以自定义，同时文档还要满足以下两个条件才会被搜索到：")]),t._v(" "),s("ol",[s("li",[s("strong",[t._v("分词后所有词项都要出现在该字段中（相当于 and 操作）")]),t._v("。")]),t._v(" "),s("li",[s("strong",[t._v("字段中的词项顺序要一致")]),t._v("。")])]),t._v(" "),s("p",[t._v("例如，有以下 3 个文档，使用 "),s("strong",[s("code",[t._v("match_phrase")])]),t._v(' 查询 "How are you"，只有前两个文档会被匹配：')]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("PUT demo/_create/1\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"desc"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"How are you"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\nPUT demo/_create/2\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"desc"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"How are you, Jack?"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\nPUT demo/_create/3\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"desc"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"are you"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\nGET demo/_search\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"query"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"match_phrase"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"desc"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"How are you"')]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("blockquote",[s("p",[t._v("说明：")]),t._v(" "),s("p",[t._v("一个被认定为和短语 How are you 匹配的文档，必须满足以下这些要求：")]),t._v(" "),s("ul",[s("li",[t._v("How、 are 和 you 需要全部出现在域中。")]),t._v(" "),s("li",[t._v("are 的位置应该比 How 的位置大 1 。")]),t._v(" "),s("li",[t._v("you 的位置应该比 How 的位置大 2 。")])])]),t._v(" "),s("h3",{attrs:{id:"match-phrase-prefix-query"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#match-phrase-prefix-query"}},[t._v("#")]),t._v(" match_phrase_prefix query")]),t._v(" "),s("p",[s("a",{attrs:{href:"https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-match-query-phrase-prefix.html",target:"_blank",rel:"noopener noreferrer"}},[s("strong",[s("code",[t._v("match_phrase_prefix query")])]),s("OutboundLink")],1),t._v(" 和 "),s("a",{attrs:{href:"https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-match-query-phrase.html",target:"_blank",rel:"noopener noreferrer"}},[s("strong",[s("code",[t._v("match_phrase query")])]),s("OutboundLink")],1),t._v(" 类似，只不过 "),s("a",{attrs:{href:"https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-match-query-phrase-prefix.html",target:"_blank",rel:"noopener noreferrer"}},[s("strong",[s("code",[t._v("match_phrase_prefix query")])]),s("OutboundLink")],1),t._v(" 最后一个 term 会被作为前缀匹配。")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("GET demo/_search\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"query"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"match_phrase_prefix"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"desc"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"are yo"')]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h3",{attrs:{id:"multi-match-query"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#multi-match-query"}},[t._v("#")]),t._v(" multi_match query")]),t._v(" "),s("p",[s("a",{attrs:{href:"https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-multi-match-query.html",target:"_blank",rel:"noopener noreferrer"}},[s("strong",[s("code",[t._v("multi_match query")])]),s("OutboundLink")],1),t._v(" 是 "),s("strong",[s("code",[t._v("match query")])]),t._v(" 的升级，"),s("strong",[t._v("用于搜索多个字段")]),t._v("。")]),t._v(" "),s("p",[t._v("示例：")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("GET kibana_sample_data_ecommerce/_search\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"query"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"multi_match"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"query"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("34.98")]),t._v(",\n      "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"fields"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"taxful_total_price"')]),t._v(",\n        "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"taxless_total_price"')]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[s("strong",[s("code",[t._v("multi_match query")])]),t._v(" 的搜索字段可以使用通配符指定，示例如下：")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("GET kibana_sample_data_ecommerce/_search\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"query"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"multi_match"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"query"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("34.98")]),t._v(",\n      "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"fields"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"taxful_*"')]),t._v(",\n        "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"taxless_total_price"')]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("同时，也可以用"),s("strong",[t._v("指数符指定搜索字段的权重")]),t._v("。")]),t._v(" "),s("p",[t._v("示例：指定 taxful_total_price 字段的权重是 taxless_total_price 字段的 3 倍，命令如下：")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("GET kibana_sample_data_ecommerce/_search\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"query"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"multi_match"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"query"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("34.98")]),t._v(",\n      "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"fields"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"taxful_total_price^3"')]),t._v(",\n        "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"taxless_total_price"')]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h3",{attrs:{id:"combined-fields-query"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#combined-fields-query"}},[t._v("#")]),t._v(" combined_fields query")]),t._v(" "),s("p",[s("a",{attrs:{href:"https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-combined-fields-query.html",target:"_blank",rel:"noopener noreferrer"}},[s("strong",[s("code",[t._v("combined_fields query")])]),s("OutboundLink")],1),t._v(" 支持搜索多个文本字段，就好像它们的内容已被索引到一个组合字段中一样。该查询会生成以 term 为中心的输入字符串视图：首先它将查询字符串解析为独立的 term，然后在所有字段中查找每个 term。当匹配结果可能跨越多个文本字段时，此查询特别有用，例如文章的标题、摘要和正文：")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("GET /_search\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"query"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"combined_fields"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"query"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v("      "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"database systems"')]),t._v(",\n      "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"fields"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v("     "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"title"')]),t._v(", "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"abstract"')]),t._v(", "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"body"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(",\n      "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"operator"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v("   "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"and"')]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h4",{attrs:{id:"字段前缀权重"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#字段前缀权重"}},[t._v("#")]),t._v(" 字段前缀权重")]),t._v(" "),s("p",[t._v("字段前缀权重根据组合字段模型进行计算。例如，如果 title 字段的权重为 2，则匹配度打分时会将 title 中的每个 term 形成的组合字段，按出现两次进行打分。")]),t._v(" "),s("h3",{attrs:{id:"common-terms-query"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#common-terms-query"}},[t._v("#")]),t._v(" common_terms query")]),t._v(" "),s("blockquote",[s("p",[t._v("7.3.0 废弃")])]),t._v(" "),s("p",[s("a",{attrs:{href:"https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-common-terms-query.html",target:"_blank",rel:"noopener noreferrer"}},[s("strong",[s("code",[t._v("common_terms query")])]),s("OutboundLink")],1),t._v(" 是一种在不牺牲性能的情况下替代停用词提高搜索准确率和召回率的方案。")]),t._v(" "),s("p",[t._v("查询中的每个词项都有一定的代价，以搜索“The brown fox”为例，query 会被解析成三个词项“the”“brown”和“fox”，每个词项都会到索引中执行一次查询。很显然包含“the”的文档非常多，相比其他词项，“the”的重要性会低很多。传统的解决方案是把“the”当作停用词处理，去除停用词之后可以减少索引大小，同时在搜索时减少对停用词的收缩。")]),t._v(" "),s("p",[t._v("虽然停用词对文档评分影响不大，但是当停用词仍然有重要意义的时候，去除停用词就不是完美的解决方案了。如果去除停用词，就无法区分“happy”和“not happy”, “The”“To be or not to be”就不会在索引中存在，搜索的准确率和召回率就会降低。")]),t._v(" "),s("p",[t._v("common_terms query 提供了一种解决方案，它把 query 分词后的词项分成重要词项（低频词项）和不重要的词项（高频词，也就是之前的停用词）。在搜索的时候，首先搜索和重要词项匹配的文档，这些文档是词项出现较少并且词项对其评分影响较大的文档。然后执行第二次查询，搜索对评分影响较小的高频词项，但是不计算所有文档的评分，而是只计算第一次查询已经匹配的文档得分。如果一个查询中只包含高频词，那么会通过 and 连接符执行一个单独的查询，换言之，会搜索所有的词项。")]),t._v(" "),s("p",[t._v("词项是高频词还是低频词是通过 cutoff frequency 来设置阀值的，取值可以是绝对频率（频率大于 1）或者相对频率（0 ～ 1）。common_terms query 最有趣之处在于它能自适应特定领域的停用词，例如，在视频托管网站上，诸如“clip”或“video”之类的高频词项将自动表现为停用词，无须保留手动列表。")]),t._v(" "),s("p",[t._v("例如，文档频率高于 0.1% 的词项将会被当作高频词项，词频之间可以用 low_freq_operator、high_freq_operator 参数连接。设置低频词操作符为“and”使所有的低频词都是必须搜索的，示例代码如下：")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("GET books/_search\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"query"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"common"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"body"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t\t"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"query"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"nelly the elephant as a cartoon"')]),t._v(",\n\t\t\t\t"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"cutoff_frequency"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.001")]),t._v(",\n\t\t\t\t"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"low_freq_operator"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"and"')]),t._v("\n\t\t\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("上述操作等价于：")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("GET books/_search\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"query"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"bool"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"must"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n\t\t\t  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"term"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"body"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"nelly"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(",\n\t\t\t  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"term"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"body"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"elephant"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(",\n\t\t\t  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"term"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"body"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"cartoon"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t\t\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(",\n\t\t\t"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"should"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n\t\t\t  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"term"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"body"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"the"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(",\n\t\t\t  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"term"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"body"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"as"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(",\n\t\t\t  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"term"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"body"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"a"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t\t\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h3",{attrs:{id:"query-string-query"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#query-string-query"}},[t._v("#")]),t._v(" query_string query")]),t._v(" "),s("p",[s("a",{attrs:{href:"https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-query-string-query.html",target:"_blank",rel:"noopener noreferrer"}},[s("strong",[s("code",[t._v("query_string query")])]),s("OutboundLink")],1),t._v(" 是与 Lucene 查询语句的语法结合非常紧密的一种查询，允许在一个查询语句中使用多个特殊条件关键字（如：AND | OR | NOT）对多个字段进行查询，建议熟悉 Lucene 查询语法的用户去使用。")]),t._v(" "),s("p",[t._v("用户可以使用 query_string query 来创建包含通配符、跨多个字段的搜索等复杂搜索。虽然通用，但查询是严格的，如果查询字符串包含任何无效语法，则会返回错误。")]),t._v(" "),s("p",[t._v("示例：")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("GET /_search\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"query"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"query_string"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"query"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"(new york city) OR (big apple)"')]),t._v(",\n      "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"default_field"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"content"')]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h3",{attrs:{id:"simple-query-string-query"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#simple-query-string-query"}},[t._v("#")]),t._v(" simple_query_string query")]),t._v(" "),s("p",[s("a",{attrs:{href:"https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-simple-query-string-query.html",target:"_blank",rel:"noopener noreferrer"}},[s("strong",[s("code",[t._v("simple_query_string query")])]),s("OutboundLink")],1),t._v(" 是一种适合直接暴露给用户，并且具有非常完善的查询语法的查询语句，接受 Lucene 查询语法，解析过程中发生错误不会抛出异常。")]),t._v(" "),s("p",[t._v("虽然语法比 "),s("a",{attrs:{href:"https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-query-string-query.html",target:"_blank",rel:"noopener noreferrer"}},[s("strong",[s("code",[t._v("query_string query")])]),s("OutboundLink")],1),t._v(" 更严格，但 "),s("a",{attrs:{href:"https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-simple-query-string-query.html",target:"_blank",rel:"noopener noreferrer"}},[s("strong",[s("code",[t._v("simple_query_string query")])]),s("OutboundLink")],1),t._v(" 不会返回无效语法的错误。相反，它会忽略查询字符串的任何无效部分。")]),t._v(" "),s("p",[t._v("示例：")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("GET /_search\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"query"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"simple_query_string"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"query"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"'),s("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[t._v('\\"')]),t._v("fried eggs"),s("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[t._v('\\"')]),t._v(' +(eggplant | potato) -frittata"')]),t._v(",\n        "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"fields"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"title^5"')]),t._v(", "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"body"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(",\n        "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"default_operator"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"and"')]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h4",{attrs:{id:"simple-query-string-语义"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#simple-query-string-语义"}},[t._v("#")]),t._v(" simple_query_string 语义")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("+")]),t._v("：等价于 AND 操作")]),t._v(" "),s("li",[s("code",[t._v("|")]),t._v("：等价于 OR 操作")]),t._v(" "),s("li",[s("code",[t._v("-")]),t._v("：相当于 NOT 操作")]),t._v(" "),s("li",[s("code",[t._v('"')]),t._v("：包装一些标记以表示用于搜索的短语")]),t._v(" "),s("li",[s("code",[t._v("*")]),t._v("：词尾表示前缀查询")]),t._v(" "),s("li",[s("code",[t._v("(")]),t._v(" and "),s("code",[t._v(")")]),t._v("：表示优先级")]),t._v(" "),s("li",[s("code",[t._v("~N")]),t._v("：词尾表示表示编辑距离（模糊性）")]),t._v(" "),s("li",[s("code",[t._v("~N")]),t._v("：在一个短语之后表示溢出量")])]),t._v(" "),s("p",[t._v("注意：要使用上面的字符，请使用反斜杠 "),s("code",[t._v("/")]),t._v(" 对其进行转义。")]),t._v(" "),s("h3",{attrs:{id:"全文查询完整示例"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#全文查询完整示例"}},[t._v("#")]),t._v(" 全文查询完整示例")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#设置 position_increment_gap")]),t._v("\nDELETE "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("groups")]),t._v("\nPUT "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("groups")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"mappings"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"properties"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"names"')]),t._v(":"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"type"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"text"')]),t._v(",\n        "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"position_increment_gap"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\nGET groups/_mapping\n\nPOST groups/_doc\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"names"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"John Water"')]),t._v(", "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Water Smith"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\nPOST groups/_search\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"query"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"match_phrase"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"names"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"query"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Water Water"')]),t._v(",\n        "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"slop"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\nPOST groups/_search\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"query"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"match_phrase"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"names"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Water Smith"')]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\nDELETE "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("groups")]),t._v("\n")])])]),s("h2",{attrs:{id:"词项查询"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#词项查询"}},[t._v("#")]),t._v(" 词项查询")]),t._v(" "),s("p",[s("strong",[s("code",[t._v("Term")]),t._v("（词项）是表达语意的最小单位")]),t._v("。搜索和利用统计语言模型进行自然语言处理都需要处理 Term。")]),t._v(" "),s("p",[t._v("全文查询在执行查询之前会分析查询字符串。")]),t._v(" "),s("p",[t._v("与全文查询不同，词项查询不会分词，而是将输入作为一个整体，在倒排索引中查找准确的词项。并且使用相关度计算公式为每个包含该词项的文档进行相关度计算。一言以概之："),s("strong",[t._v("词项查询是对词项进行精确匹配")]),t._v("。词项查询通常用于结构化数据，如数字、日期和枚举类型。")]),t._v(" "),s("p",[t._v("词项查询有以下类型：")]),t._v(" "),s("ul",[s("li",[s("strong",[s("a",{attrs:{href:"https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-exists-query.html",target:"_blank",rel:"noopener noreferrer"}},[s("code",[t._v("exists")]),t._v(" query"),s("OutboundLink")],1)])]),t._v(" "),s("li",[s("strong",[s("a",{attrs:{href:"https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-fuzzy-query.html",target:"_blank",rel:"noopener noreferrer"}},[s("code",[t._v("fuzzy")]),t._v(" query"),s("OutboundLink")],1)])]),t._v(" "),s("li",[s("strong",[s("a",{attrs:{href:"https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-ids-query.html",target:"_blank",rel:"noopener noreferrer"}},[s("code",[t._v("ids")]),t._v(" query"),s("OutboundLink")],1)])]),t._v(" "),s("li",[s("strong",[s("a",{attrs:{href:"https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-prefix-query.html",target:"_blank",rel:"noopener noreferrer"}},[s("code",[t._v("prefix")]),t._v(" query"),s("OutboundLink")],1)])]),t._v(" "),s("li",[s("strong",[s("a",{attrs:{href:"https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-range-query.html",target:"_blank",rel:"noopener noreferrer"}},[s("code",[t._v("range")]),t._v(" query"),s("OutboundLink")],1)])]),t._v(" "),s("li",[s("strong",[s("a",{attrs:{href:"https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-regexp-query.html",target:"_blank",rel:"noopener noreferrer"}},[s("code",[t._v("regexp")]),t._v(" query"),s("OutboundLink")],1)])]),t._v(" "),s("li",[s("strong",[s("a",{attrs:{href:"https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-term-query.html",target:"_blank",rel:"noopener noreferrer"}},[s("code",[t._v("term")]),t._v(" query"),s("OutboundLink")],1)])]),t._v(" "),s("li",[s("strong",[s("a",{attrs:{href:"https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-terms-query.html",target:"_blank",rel:"noopener noreferrer"}},[s("code",[t._v("terms")]),t._v(" query"),s("OutboundLink")],1)])]),t._v(" "),s("li",[s("strong",[s("a",{attrs:{href:"https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-type-query.html",target:"_blank",rel:"noopener noreferrer"}},[s("code",[t._v("type")]),t._v(" query"),s("OutboundLink")],1)])]),t._v(" "),s("li",[s("strong",[s("a",{attrs:{href:"https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-wildcard-query.html",target:"_blank",rel:"noopener noreferrer"}},[s("code",[t._v("wildcard")]),t._v(" query"),s("OutboundLink")],1)])])]),t._v(" "),s("h3",{attrs:{id:"exists-query"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#exists-query"}},[t._v("#")]),t._v(" exists query")]),t._v(" "),s("p",[s("a",{attrs:{href:"https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-exists-query.html",target:"_blank",rel:"noopener noreferrer"}},[s("strong",[s("code",[t._v("exists query")])]),s("OutboundLink")],1),t._v(" 会返回字段中至少有一个非空值的文档。")]),t._v(" "),s("p",[t._v("由于多种原因，文档字段可能不存在索引值：")]),t._v(" "),s("ul",[s("li",[t._v("JSON 中的字段为 "),s("code",[t._v("null")]),t._v(" 或 "),s("code",[t._v("[]")])]),t._v(" "),s("li",[t._v("该字段在 mapping 中配置了 "),s("code",[t._v('"index" : false')])]),t._v(" "),s("li",[t._v("字段值的长度超过了 mapping 中的 "),s("code",[t._v("ignore_above")]),t._v(" 设置")]),t._v(" "),s("li",[t._v("字段值格式错误，并且在 mapping 中定义了 "),s("code",[t._v("ignore_malformed")])])]),t._v(" "),s("p",[t._v("示例：")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("GET kibana_sample_data_ecommerce/_search\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"query"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"exists"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"field"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"email"')]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("以下文档会匹配上面的查询：")]),t._v(" "),s("ul",[s("li",[s("code",[t._v('{ "user" : "jane" }')]),t._v(" 有 user 字段，且不为空。")]),t._v(" "),s("li",[s("code",[t._v('{ "user" : "" }')]),t._v(" 有 user 字段，值为空字符串。")]),t._v(" "),s("li",[s("code",[t._v('{ "user" : "-" }')]),t._v(" 有 user 字段，值不为空。")]),t._v(" "),s("li",[s("code",[t._v('{ "user" : [ "jane" ] }')]),t._v(" 有 user 字段，值不为空。")]),t._v(" "),s("li",[s("code",[t._v('{ "user" : [ "jane", null ] }')]),t._v(" 有 user 字段，至少一个值不为空即可。")])]),t._v(" "),s("p",[t._v("下面的文档都不会被匹配：")]),t._v(" "),s("ul",[s("li",[s("code",[t._v('{ "user" : null }')]),t._v(" 虽然有 user 字段，但是值为空。")]),t._v(" "),s("li",[s("code",[t._v('{ "user" : [] }')]),t._v(" 虽然有 user 字段，但是值为空。")]),t._v(" "),s("li",[s("code",[t._v('{ "user" : [null] }')]),t._v(" 虽然有 user 字段，但是值为空。")]),t._v(" "),s("li",[s("code",[t._v('{ "foo" : "bar" }')]),t._v(" 没有 user 字段。")])]),t._v(" "),s("h3",{attrs:{id:"fuzzy-query"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#fuzzy-query"}},[t._v("#")]),t._v(" fuzzy query")]),t._v(" "),s("p",[s("a",{attrs:{href:"https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-fuzzy-query.html",target:"_blank",rel:"noopener noreferrer"}},[s("strong",[s("code",[t._v("fuzzy query")])]),t._v("（模糊查询）"),s("OutboundLink")],1),t._v("返回包含与搜索词相似的词的文档。ES 使用 "),s("a",{attrs:{href:"https://en.wikipedia.org/wiki/Levenshtein_distance",target:"_blank",rel:"noopener noreferrer"}},[t._v("Levenshtein edit distance（Levenshtein 编辑距离）"),s("OutboundLink")],1),t._v("测量相似度或模糊度。")]),t._v(" "),s("p",[t._v("编辑距离是将一个术语转换为另一个术语所需的单个字符更改的数量。这些变化可能包括：")]),t._v(" "),s("ul",[s("li",[t._v("改变一个字符：（"),s("strong",[t._v("b")]),t._v("ox -> "),s("strong",[t._v("f")]),t._v("ox）")]),t._v(" "),s("li",[t._v("删除一个字符：（"),s("strong",[t._v("b")]),t._v("lack -> lack）")]),t._v(" "),s("li",[t._v("插入一个字符：（sic -> sic"),s("strong",[t._v("k")]),t._v("）")]),t._v(" "),s("li",[t._v("反转两个相邻字符：（"),s("strong",[t._v("ac")]),t._v("t → "),s("strong",[t._v("ca")]),t._v("t）")])]),t._v(" "),s("p",[t._v("为了找到相似的词条，fuzzy query 会在指定的编辑距离内创建搜索词条的所有可能变体或扩展集。然后返回完全匹配任意扩展的文档。")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("GET books/_search\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"query"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"fuzzy"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"user.id"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"value"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ki"')]),t._v(",\n        "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"fuzziness"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"AUTO"')]),t._v(",\n        "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"max_expansions"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("50")]),t._v(",\n        "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"prefix_length"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(",\n        "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"transpositions"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" true,\n        "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"rewrite"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"constant_score"')]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("注意：如果配置了 "),s("a",{attrs:{href:"https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl.html#query-dsl-allow-expensive-queries",target:"_blank",rel:"noopener noreferrer"}},[s("code",[t._v("search.allow_expensive_queries")]),s("OutboundLink")],1),t._v(" ，则 fuzzy query 不能执行。")]),t._v(" "),s("h3",{attrs:{id:"ids-query"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#ids-query"}},[t._v("#")]),t._v(" ids query")]),t._v(" "),s("p",[s("a",{attrs:{href:"https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-ids-query.html",target:"_blank",rel:"noopener noreferrer"}},[s("strong",[s("code",[t._v("ids query")])]),s("OutboundLink")],1),t._v(" 根据 ID 返回文档。 此查询使用存储在 "),s("code",[t._v("_id")]),t._v(" 字段中的文档 ID。")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("GET /_search\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"query"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ids"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"values"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"1"')]),t._v(", "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"4"')]),t._v(", "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"100"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h3",{attrs:{id:"prefix-query"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#prefix-query"}},[t._v("#")]),t._v(" prefix query")]),t._v(" "),s("p",[s("a",{attrs:{href:"https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-prefix-query.html#prefix-query-ex-request",target:"_blank",rel:"noopener noreferrer"}},[s("strong",[s("code",[t._v("prefix query")])]),s("OutboundLink")],1),t._v(" 用于查询某个字段中包含指定前缀的文档。")]),t._v(" "),s("p",[t._v("比如查询 "),s("code",[t._v("user.id")]),t._v(" 中含有以 "),s("code",[t._v("ki")]),t._v(" 为前缀的关键词的文档，那么含有 "),s("code",[t._v("kind")]),t._v("、"),s("code",[t._v("kid")]),t._v(" 等所有以 "),s("code",[t._v("ki")]),t._v(" 开头关键词的文档都会被匹配。")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("GET /_search\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"query"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"prefix"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"user.id"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"value"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ki"')]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h3",{attrs:{id:"range-query"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#range-query"}},[t._v("#")]),t._v(" range query")]),t._v(" "),s("p",[s("a",{attrs:{href:"https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-range-query.html",target:"_blank",rel:"noopener noreferrer"}},[s("strong",[s("code",[t._v("range query")])]),s("OutboundLink")],1),t._v(" 即范围查询，用于匹配在某一范围内的数值型、日期类型或者字符串型字段的文档。比如搜索哪些书籍的价格在 50 到 100 之间、哪些书籍的出版时间在 2015 年到 2019 年之间。"),s("strong",[t._v("使用 range 查询只能查询一个字段，不能作用在多个字段上")]),t._v("。")]),t._v(" "),s("p",[t._v("range 查询支持的参数有以下几种：")]),t._v(" "),s("ul",[s("li",[s("p",[s("strong",[s("code",[t._v("gt")])]),t._v("：大于")])]),t._v(" "),s("li",[s("p",[s("strong",[s("code",[t._v("gte")])]),t._v("：大于等于")])]),t._v(" "),s("li",[s("p",[s("strong",[s("code",[t._v("lt")])]),t._v("：小于")])]),t._v(" "),s("li",[s("p",[s("strong",[s("code",[t._v("lte")])]),t._v("：小于等于")])]),t._v(" "),s("li",[s("p",[s("strong",[s("code",[t._v("format")])]),t._v("：如果字段是 Date 类型，可以设置日期格式化")])]),t._v(" "),s("li",[s("p",[s("strong",[s("code",[t._v("time_zone")])]),t._v("：时区")])]),t._v(" "),s("li",[s("p",[s("strong",[s("code",[t._v("relation")])]),t._v("：指示范围查询如何匹配范围字段的值。")]),t._v(" "),s("ul",[s("li",[s("strong",[s("code",[t._v("INTERSECTS")]),t._v(" (Default)")]),t._v("：匹配与查询字段值范围相交的文档。")]),t._v(" "),s("li",[s("strong",[s("code",[t._v("CONTAINS")])]),t._v("：匹配完全包含查询字段值的文档。")]),t._v(" "),s("li",[s("strong",[s("code",[t._v("WITHIN")])]),t._v("：匹配具有完全在查询范围内的范围字段值的文档。")])])])]),t._v(" "),s("p",[t._v("示例：数值范围查询")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("GET kibana_sample_data_ecommerce/_search\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"query"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"range"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"taxful_total_price"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"gt"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v(",\n        "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"lte"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("50")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("示例：日期范围查询")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("GET kibana_sample_data_ecommerce/_search\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"query"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"range"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"order_date"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"time_zone"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"+00:00"')]),t._v(",\n        "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"gte"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"2018-01-01T00:00:00"')]),t._v(",\n        "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"lte"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"now"')]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h3",{attrs:{id:"regexp-query"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#regexp-query"}},[t._v("#")]),t._v(" regexp query")]),t._v(" "),s("p",[s("a",{attrs:{href:"https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-regexp-query.html",target:"_blank",rel:"noopener noreferrer"}},[s("strong",[s("code",[t._v("regexp query")])]),s("OutboundLink")],1),t._v(" 返回与正则表达式相匹配的 term 所属的文档。")]),t._v(" "),s("p",[s("a",{attrs:{href:"https://zh.wikipedia.org/zh-hans/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F",target:"_blank",rel:"noopener noreferrer"}},[t._v("正则表达式"),s("OutboundLink")],1),t._v("是一种使用占位符字符匹配数据模式的方法，称为运算符。")]),t._v(" "),s("p",[t._v("示例：以下搜索返回 "),s("code",[t._v("user.id")]),t._v(" 字段包含任何以 "),s("code",[t._v("k")]),t._v(" 开头并以 "),s("code",[t._v("y")]),t._v(" 结尾的文档。 "),s("code",[t._v(".*")]),t._v(" 运算符匹配任何长度的任何字符，包括无字符。匹配项可以包括 "),s("code",[t._v("ky")]),t._v("、"),s("code",[t._v("kay")]),t._v(" 和 "),s("code",[t._v("kimchy")]),t._v("。")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("GET /_search\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"query"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"regexp"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"user.id"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"value"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"k.*y"')]),t._v(",\n        "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"flags"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ALL"')]),t._v(",\n        "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"case_insensitive"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" true,\n        "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"max_determinized_states"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10000")]),t._v(",\n        "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"rewrite"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"constant_score"')]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("blockquote",[s("p",[t._v("注意：如果配置了"),s("a",{attrs:{href:"https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl.html#query-dsl-allow-expensive-queries",target:"_blank",rel:"noopener noreferrer"}},[s("code",[t._v("search.allow_expensive_queries")]),s("OutboundLink")],1),t._v(" ，则 "),s("a",{attrs:{href:"https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-regexp-query.html",target:"_blank",rel:"noopener noreferrer"}},[s("strong",[s("code",[t._v("regexp query")])]),s("OutboundLink")],1),t._v(" 会被禁用。")])]),t._v(" "),s("h3",{attrs:{id:"term-query"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#term-query"}},[t._v("#")]),t._v(" term query")]),t._v(" "),s("p",[s("a",{attrs:{href:"https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-term-query.html",target:"_blank",rel:"noopener noreferrer"}},[s("strong",[s("code",[t._v("term query")])]),s("OutboundLink")],1),t._v(" 用来查找指定字段中包含给定单词的文档，term 查询不被解析，只有查询词和文档中的词精确匹配才会被搜索到，应用场景为查询人名、地名等需要精准匹配的需求。")]),t._v(" "),s("p",[t._v("示例：")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 1. 创建一个索引")]),t._v("\nDELETE my-index-000001\nPUT my-index-000001\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"mappings"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"properties"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"full_text"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"type"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"text"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# 2. 使用 "Quick Brown Foxes!" 关键字查 "full_text" 字段')]),t._v("\nPUT my-index-000001/_doc/1\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"full_text"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Quick Brown Foxes!"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 3. 使用 term 查询")]),t._v("\nGET my-index-000001/_search?pretty\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"query"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"term"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"full_text"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Quick Brown Foxes!"')]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# 因为 full_text 字段不再包含确切的 Term —— "Quick Brown Foxes!"，所以 term query 搜索不到任何结果')]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 4. 使用 match 查询")]),t._v("\nGET my-index-000001/_search?pretty\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"query"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"match"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"full_text"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Quick Brown Foxes!"')]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\nDELETE my-index-000001\n")])])]),s("blockquote",[s("p",[t._v("⚠️ 注意：应避免 term 查询对 text 字段使用查询。")]),t._v(" "),s("p",[t._v("默认情况下，Elasticsearch 针对 text 字段的值进行解析分词，这会使查找 text 字段值的精确匹配变得困难。")]),t._v(" "),s("p",[t._v("要搜索 text 字段值，需改用 match 查询。")])]),t._v(" "),s("h3",{attrs:{id:"terms-query"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#terms-query"}},[t._v("#")]),t._v(" terms query")]),t._v(" "),s("p",[s("a",{attrs:{href:"https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-terms-query.html",target:"_blank",rel:"noopener noreferrer"}},[s("strong",[s("code",[t._v("terms query")])]),s("OutboundLink")],1),t._v(" 与 "),s("a",{attrs:{href:"https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-term-query.html",target:"_blank",rel:"noopener noreferrer"}},[s("strong",[s("code",[t._v("term query")])]),s("OutboundLink")],1),t._v(" 相同，但可以搜索多个值。")]),t._v(" "),s("p",[t._v("terms query 查询参数：")]),t._v(" "),s("ul",[s("li",[s("strong",[s("code",[t._v("index")])]),t._v("：索引名")]),t._v(" "),s("li",[s("strong",[s("code",[t._v("id")])]),t._v("：文档 ID")]),t._v(" "),s("li",[s("strong",[s("code",[t._v("path")])]),t._v("：要从中获取字段值的字段的名称，即搜索关键字")]),t._v(" "),s("li",[s("strong",[s("code",[t._v("routing")])]),t._v("（选填）：要从中获取 term 值的文档的自定义路由值。如果在索引文档时提供了自定义路由值，则此参数是必需的。")])]),t._v(" "),s("p",[t._v("示例：")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 1. 创建一个索引")]),t._v("\nDELETE my-index-000001\nPUT my-index-000001\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"mappings"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"properties"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"color"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"type"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"keyword"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 2. 写入一个文档")]),t._v("\nPUT my-index-000001/_doc/1\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"color"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"blue"')]),t._v(",\n    "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"green"')]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 3. 写入另一个文档")]),t._v("\nPUT my-index-000001/_doc/2\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"color"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"blue"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 3. 使用 terms query")]),t._v("\nGET my-index-000001/_search?pretty\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"query"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"terms"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"color"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"index"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"my-index-000001"')]),t._v(",\n        "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"id"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"2"')]),t._v(",\n        "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"path"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"color"')]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\nDELETE my-index-000001\n")])])]),s("h3",{attrs:{id:"type-query"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#type-query"}},[t._v("#")]),t._v(" type query")]),t._v(" "),s("blockquote",[s("p",[t._v("7.0.0 后废弃")])]),t._v(" "),s("p",[s("a",{attrs:{href:"https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-type-query.html",target:"_blank",rel:"noopener noreferrer"}},[s("strong",[s("code",[t._v("type query")])]),s("OutboundLink")],1),t._v(" 用于查询具有指定类型的文档。")]),t._v(" "),s("p",[t._v("示例：")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("GET /_search\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"query"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"type"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"value"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"_doc"')]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h3",{attrs:{id:"wildcard-query"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#wildcard-query"}},[t._v("#")]),t._v(" wildcard query")]),t._v(" "),s("p",[s("a",{attrs:{href:"https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-wildcard-query.html",target:"_blank",rel:"noopener noreferrer"}},[s("strong",[s("code",[t._v("wildcard query")])]),s("OutboundLink")],1),t._v(" 即通配符查询，返回与通配符模式匹配的文档。")]),t._v(" "),s("p",[s("code",[t._v("?")]),t._v(" 用来匹配一个任意字符，"),s("code",[t._v("*")]),t._v(" 用来匹配零个或者多个字符。")]),t._v(" "),s("p",[t._v("示例：以下搜索返回 "),s("code",[t._v("user.id")]),t._v(" 字段包含以 "),s("code",[t._v("ki")]),t._v(" 开头并以 "),s("code",[t._v("y")]),t._v(" 结尾的术语的文档。这些匹配项可以包括 "),s("code",[t._v("kiy")]),t._v("、"),s("code",[t._v("kity")]),t._v(" 或 "),s("code",[t._v("kimchy")]),t._v("。")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("GET /_search\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"query"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"wildcard"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"user.id"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"value"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ki*y"')]),t._v(",\n        "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"boost"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.0")]),t._v(",\n        "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"rewrite"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"constant_score"')]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("blockquote",[s("p",[t._v("注意：如果配置了"),s("a",{attrs:{href:"https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl.html#query-dsl-allow-expensive-queries",target:"_blank",rel:"noopener noreferrer"}},[s("code",[t._v("search.allow_expensive_queries")]),s("OutboundLink")],1),t._v(" ，则"),s("a",{attrs:{href:"https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-wildcard-query.html",target:"_blank",rel:"noopener noreferrer"}},[s("strong",[s("code",[t._v("wildcard query")])]),s("OutboundLink")],1),t._v(" 会被禁用。")])]),t._v(" "),s("h3",{attrs:{id:"词项查询完整示例"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#词项查询完整示例"}},[t._v("#")]),t._v(" 词项查询完整示例")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("DELETE products\nPUT products\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"settings"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"number_of_shards"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\nPOST /products/_bulk\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"index"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"_id"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"productID"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"XHDK-A-1293-#fJ3"')]),t._v(","),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"desc"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"iPhone"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"index"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"_id"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"productID"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"KDKE-B-9947-#kL5"')]),t._v(","),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"desc"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"iPad"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"index"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"_id"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"productID"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"JODL-X-1937-#pV7"')]),t._v(","),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"desc"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"MBP"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\nGET /products\n\nPOST /products/_search\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"query"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"term"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"desc"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        //"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"value"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"iPhone"')]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"value"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"iphone"')]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\nPOST /products/_search\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"query"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"term"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"desc.keyword"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        //"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"value"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"iPhone"')]),t._v("\n        //"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"value"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"iphone"')]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\nPOST /products/_search\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"query"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"term"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"productID"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"value"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"XHDK-A-1293-#fJ3"')]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\nPOST /products/_search\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  //"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"explain"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" true,\n  "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"query"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"term"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"productID.keyword"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"value"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"XHDK-A-1293-#fJ3"')]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\nPOST /products/_search\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"explain"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" true,\n  "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"query"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"constant_score"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"filter"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"term"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"productID.keyword"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"XHDK-A-1293-#fJ3"')]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h2",{attrs:{id:"复合查询"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#复合查询"}},[t._v("#")]),t._v(" 复合查询")]),t._v(" "),s("p",[t._v("复合查询就是把一些简单查询组合在一起实现更复杂的查询需求，除此之外，复合查询还可以控制另外一个查询的行为。")]),t._v(" "),s("h3",{attrs:{id:"bool-query"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#bool-query"}},[t._v("#")]),t._v(" bool query")]),t._v(" "),s("p",[t._v("bool 查询可以把任意多个简单查询组合在一起，使用 must、should、must_not、filter 选项来表示简单查询之间的逻辑，每个选项都可以出现 0 次到多次，它们的含义如下：")]),t._v(" "),s("ul",[s("li",[t._v("must 文档必须匹配 must 选项下的查询条件，相当于逻辑运算的 AND，且参与文档相关度的评分。")]),t._v(" "),s("li",[t._v("should 文档可以匹配 should 选项下的查询条件也可以不匹配，相当于逻辑运算的 OR，且参与文档相关度的评分。")]),t._v(" "),s("li",[t._v("must_not 与 must 相反，匹配该选项下的查询条件的文档不会被返回；需要注意的是，"),s("strong",[t._v("must_not 语句不会影响评分，它的作用只是将不相关的文档排除")]),t._v("。")]),t._v(" "),s("li",[t._v("filter 和 must 一样，匹配 filter 选项下的查询条件的文档才会被返回，"),s("strong",[t._v("但是 filter 不评分，只起到过滤功能，与 must_not 相反")]),t._v("。")])]),t._v(" "),s("p",[t._v("假设要查询 title 中包含关键词 java，并且 price 不能高于 70，description 可以包含也可以不包含虚拟机的书籍，构造 bool 查询语句如下：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('GET books/_search\n{\n  "query": {\n    "bool": {\n      "filter": {\n        "term": {\n          "status": 1\n        }\n      },\n      "must_not": {\n        "range": {\n          "price": {\n            "gte": 70\n          }\n        }\n      },\n      "must": {\n        "match": {\n          "title": "java"\n        }\n      },\n      "should": [\n        {\n          "match": {\n            "description": "虚拟机"\n          }\n        }\n      ],\n      "minimum_should_match": 1\n    }\n  }\n}\n')])])]),s("p",[t._v("有关布尔查询更详细的信息参考 "),s("a",{attrs:{href:"https://www.knowledgedict.com/tutorial/elasticsearch-query-bool.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("bool query（组合查询）详解"),s("OutboundLink")],1),t._v("。")]),t._v(" "),s("h3",{attrs:{id:"boosting-query"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#boosting-query"}},[t._v("#")]),t._v(" boosting query")]),t._v(" "),s("p",[t._v("boosting 查询用于需要对两个查询的评分进行调整的场景，boosting 查询会把两个查询封装在一起并降低其中一个查询的评分。")]),t._v(" "),s("p",[t._v("boosting 查询包括 positive、negative 和 negative_boost 三个部分，positive 中的查询评分保持不变，negative 中的查询会降低文档评分，negative_boost 指明 negative 中降低的权值。如果我们想对 2015 年之前出版的书降低评分，可以构造一个 boosting 查询，查询语句如下：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('GET books/_search\n{\n\t"query": {\n\t\t"boosting": {\n\t\t\t"positive": {\n\t\t\t\t"match": {\n\t\t\t\t\t"title": "python"\n\t\t\t\t}\n\t\t\t},\n\t\t\t"negative": {\n\t\t\t\t"range": {\n\t\t\t\t\t"publish_time": {\n\t\t\t\t\t\t"lte": "2015-01-01"\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\t"negative_boost": 0.2\n\t\t}\n\t}\n}\n')])])]),s("p",[t._v("boosting 查询中指定了抑制因子为 0.2，publish_time 的值在 2015-01-01 之后的文档得分不变，publish_time 的值在 2015-01-01 之前的文档得分为原得分的 0.2 倍。")]),t._v(" "),s("h3",{attrs:{id:"constant-score-query"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#constant-score-query"}},[t._v("#")]),t._v(" constant_score query")]),t._v(" "),s("p",[t._v("constant"),s("em",[t._v("score query 包装一个 filter query，并返回匹配过滤器查询条件的文档，且它们的相关性评分都等于 _boost")]),t._v(" 参数值（可以理解为原有的基于 tf-idf 或 bm25 的相关分固定为 1.0，所以最终评分为 "),s("em",[t._v("1.0 * boost")]),t._v("，即等于 "),s("em",[t._v("boost")]),t._v(" 参数值）。下面的查询语句会返回 title 字段中含有关键词 "),s("em",[t._v("elasticsearch")]),t._v(" 的文档，所有文档的评分都是 1.8：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('GET books/_search\n{\n  "query": {\n    "constant_score": {\n      "filter": {\n        "term": {\n          "title": "elasticsearch"\n        }\n      },\n      "boost": 1.8\n    }\n  }\n}\n')])])]),s("h3",{attrs:{id:"dis-max-query"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#dis-max-query"}},[t._v("#")]),t._v(" dis_max query")]),t._v(" "),s("p",[t._v("dis_max query 与 bool query 有一定联系也有一定区别，dis_max query 支持多并发查询，可返回与任意查询条件子句匹配的任何文档类型。与 bool 查询可以将所有匹配查询的分数相结合使用的方式不同，dis_max 查询只使用最佳匹配查询条件的分数。请看下面的例子：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('GET books/_search\n{\n\t"query": {\n\t\t"dis_max": {\n\t\t\t"tie_breaker": 0.7,\n\t\t\t"boost": 1.2,\n\t\t\t"queries": [{\n\t\t\t\t\t"term": {\n\t\t\t\t\t\t"age": 34\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t"term": {\n\t\t\t\t\t\t"age": 35\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t}\n}\n')])])]),s("h3",{attrs:{id:"function-score-query"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#function-score-query"}},[t._v("#")]),t._v(" function_score query")]),t._v(" "),s("p",[t._v("function_score query 可以修改查询的文档得分，这个查询在有些情况下非常有用，比如通过评分函数计算文档得分代价较高，可以改用过滤器加自定义评分函数的方式来取代传统的评分方式。")]),t._v(" "),s("p",[t._v("使用 function_score query，用户需要定义一个查询和一至多个评分函数，评分函数会对查询到的每个文档分别计算得分。")]),t._v(" "),s("p",[t._v("下面这条查询语句会返回 books 索引中的所有文档，文档的最大得分为 5，每个文档的得分随机生成，权重的计算模式为相乘模式。")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('GET books/_search\n{\n  "query": {\n    "function_score": {\n      "query": {\n        "match all": {}\n      },\n      "boost": "5",\n      "random_score": {},\n      "boost_mode": "multiply"\n    }\n  }\n}\n')])])]),s("p",[t._v("使用脚本自定义评分公式，这里把 price 值的十分之一开方作为每个文档的得分，查询语句如下：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('GET books/_search\n{\n  "query": {\n    "function_score": {\n      "query": {\n        "match": {\n          "title": "java"\n        }\n      },\n      "script_score": {\n        "inline": "Math.sqrt(doc[\'price\'].value/10)"\n      }\n    }\n  }\n}\n')])])]),s("p",[t._v("关于 function_score 的更多详细内容请查看 "),s("a",{attrs:{href:"https://www.knowledgedict.com/tutorial/elasticsearch-function_score.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Elasticsearch function_score 查询最强详解"),s("OutboundLink")],1),t._v("。")]),t._v(" "),s("h3",{attrs:{id:"indices-query"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#indices-query"}},[t._v("#")]),t._v(" indices query")]),t._v(" "),s("p",[t._v("indices query 适用于需要在多个索引之间进行查询的场景，它允许指定一个索引名字列表和内部查询。indices query 中有 query 和 no_match_query 两部分，query 中用于搜索指定索引列表中的文档，no_match_query 中的查询条件用于搜索指定索引列表之外的文档。下面的查询语句实现了搜索索引 books、books2 中 title 字段包含关键字 javascript，其他索引中 title 字段包含 basketball 的文档，查询语句如下：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('GET books/_search\n{\n\t"query": {\n\t\t"indices": {\n\t\t\t"indices": ["books", "books2"],\n\t\t\t"query": {\n\t\t\t\t"match": {\n\t\t\t\t\t"title": "javascript"\n\t\t\t\t}\n\t\t\t},\n\t\t\t"no_match_query": {\n\t\t\t\t"term": {\n\t\t\t\t\t"title": "basketball"\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n')])])]),s("h2",{attrs:{id:"嵌套查询"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#嵌套查询"}},[t._v("#")]),t._v(" 嵌套查询")]),t._v(" "),s("p",[t._v("在 Elasticsearch 这样的分布式系统中执行全 SQL 风格的连接查询代价昂贵，是不可行的。相应地，为了实现水平规模地扩展，Elasticsearch 提供了以下两种形式的 join：")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("nested query（嵌套查询）")]),t._v(" "),s("p",[t._v("文档中可能包含嵌套类型的字段，这些字段用来索引一些数组对象，每个对象都可以作为一条独立的文档被查询出来。")])]),t._v(" "),s("li",[s("p",[t._v("has_child query（有子查询）和 has_parent query（有父查询）")]),t._v(" "),s("p",[t._v("父子关系可以存在单个的索引的两个类型的文档之间。has_child 查询将返回其子文档能满足特定查询的父文档，而 has_parent 则返回其父文档能满足特定查询的子文档。")])])]),t._v(" "),s("h3",{attrs:{id:"nested-query"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#nested-query"}},[t._v("#")]),t._v(" nested query")]),t._v(" "),s("p",[t._v("文档中可能包含嵌套类型的字段，这些字段用来索引一些数组对象，每个对象都可以作为一条独立的文档被查询出来（用嵌套查询）。")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('PUT /my_index\n{\n\t"mappings": {\n\t\t"type1": {\n\t\t\t"properties": {\n\t\t\t\t"obj1": {\n\t\t\t\t\t"type": "nested"\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n')])])]),s("h3",{attrs:{id:"has-child-query"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#has-child-query"}},[t._v("#")]),t._v(" has_child query")]),t._v(" "),s("p",[t._v("文档的父子关系创建索引时在映射中声明，这里以员工（employee）和工作城市（branch）为例，它们属于不同的类型，相当于数据库中的两张表，如果想把员工和他们工作的城市关联起来，需要告诉 Elasticsearch 文档之间的父子关系，这里 employee 是 child type，branch 是 parent type，在映射中声明，执行命令：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('PUT /company\n{\n\t"mappings": {\n\t\t"branch": {},\n\t\t"employee": {\n\t\t\t"parent": { "type": "branch" }\n\t\t}\n\t}\n}\n')])])]),s("p",[t._v("使用 bulk api 索引 branch 类型下的文档，命令如下：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('POST company/branch/_bulk\n{ "index": { "_id": "london" }}\n{ "name": "London Westminster","city": "London","country": "UK" }\n{ "index": { "_id": "liverpool" }}\n{ "name": "Liverpool Central","city": "Liverpool","country": "UK" }\n{ "index": { "_id": "paris" }}\n{ "name": "Champs Elysees","city": "Paris","country": "France" }\n')])])]),s("p",[t._v("添加员工数据：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('POST company/employee/_bulk\n{ "index": { "_id": 1,"parent":"london" }}\n{ "name": "Alice Smith","dob": "1970-10-24","hobby": "hiking" }\n{ "index": { "_id": 2,"parent":"london" }}\n{ "name": "Mark Tomas","dob": "1982-05-16","hobby": "diving" }\n{ "index": { "_id": 3,"parent":"liverpool" }}\n{ "name": "Barry Smith","dob": "1979-04-01","hobby": "hiking" }\n{ "index": { "_id": 4,"parent":"paris" }}\n{ "name": "Adrien Grand","dob": "1987-05-11","hobby": "horses" }\n')])])]),s("p",[t._v("通过子文档查询父文档要使用 has_child 查询。例如，搜索 1980 年以后出生的员工所在的分支机构，employee 中 1980 年以后出生的有 Mark Thomas 和 Adrien Grand，他们分别在 london 和 paris，执行以下查询命令进行验证：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('GET company/branch/_search\n{\n\t"query": {\n\t\t"has_child": {\n\t\t\t"type": "employee",\n\t\t\t"query": {\n\t\t\t\t"range": { "dob": { "gte": "1980-01-01" } }\n\t\t\t}\n\t\t}\n\t}\n}\n')])])]),s("p",[t._v("搜索哪些机构中有名为 “Alice Smith” 的员工，因为使用 match 查询，会解析为 “Alice” 和 “Smith”，所以 Alice Smith 和 Barry Smith 所在的机构会被匹配，执行以下查询命令进行验证：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('GET company/branch/_search\n{\n\t"query": {\n\t\t"has_child": {\n\t\t\t"type": "employee",\n\t\t\t"score_mode": "max",\n\t\t\t"query": {\n\t\t\t\t"match": { "name": "Alice Smith" }\n\t\t\t}\n\t\t}\n\t}\n}\n')])])]),s("p",[t._v("可以使用 min_children 指定子文档的最小个数。例如，搜索最少含有两个 employee 的机构，查询命令如下：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('GET company/branch/_search?pretty\n{\n\t"query": {\n\t\t"has_child": {\n\t\t\t"type": "employee",\n\t\t\t"min_children": 2,\n\t\t\t"query": {\n\t\t\t\t"match_all": {}\n\t\t\t}\n\t\t}\n\t}\n}\n')])])]),s("h3",{attrs:{id:"has-parent-query"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#has-parent-query"}},[t._v("#")]),t._v(" has_parent query")]),t._v(" "),s("p",[t._v("通过父文档查询子文档使用 has_parent 查询。比如，搜索哪些 employee 工作在 UK，查询命令如下：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('GET company/employee/_search\n{\n\t"query": {\n\t\t"has_parent": {\n\t\t\t"parent_type": "branch",\n\t\t\t"query": {\n\t\t\t\t"match": { "country": "UK }\n\t\t\t}\n\t\t}\n\t}\n}\n')])])]),s("h2",{attrs:{id:"位置查询"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#位置查询"}},[t._v("#")]),t._v(" 位置查询")]),t._v(" "),s("p",[t._v("Elasticsearch 可以对地理位置点 geo_point 类型和地理位置形状 geo_shape 类型的数据进行搜索。为了学习方便，这里准备一些城市的地理坐标作为测试数据，每一条文档都包含城市名称和地理坐标这两个字段，这里的坐标点取的是各个城市中心的一个位置。首先把下面的内容保存到 geo.json 文件中：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('{"index":{ "_index":"geo","_type":"city","_id":"1" }}\n{"name":"北京","location":"39.9088145109,116.3973999023"}\n{"index":{ "_index":"geo","_type":"city","_id": "2" }}\n{"name":"乌鲁木齐","location":"43.8266300000,87.6168800000"}\n{"index":{ "_index":"geo","_type":"city","_id":"3" }}\n{"name":"西安","location":"34.3412700000,108.9398400000"}\n{"index":{ "_index":"geo","_type":"city","_id":"4" }}\n{"name":"郑州","location":"34.7447157466,113.6587142944"}\n{"index":{ "_index":"geo","_type":"city","_id":"5" }}\n{"name":"杭州","location":"30.2294080260,120.1492309570"}\n{"index":{ "_index":"geo","_type":"city","_id":"6" }}\n{"name":"济南","location":"36.6518400000,117.1200900000"}\n')])])]),s("p",[t._v("创建一个索引并设置映射：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('PUT geo\n{\n\t"mappings": {\n\t\t"city": {\n\t\t\t"properties": {\n\t\t\t\t"name": {\n\t\t\t\t\t"type": "keyword"\n\t\t\t\t},\n\t\t\t\t"location": {\n\t\t\t\t\t"type": "geo_point"\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n')])])]),s("p",[t._v("然后执行批量导入命令：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('curl -XPOST "http://localhost:9200/_bulk?pretty" --data-binary @geo.json\n')])])]),s("h3",{attrs:{id:"geo-distance-query"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#geo-distance-query"}},[t._v("#")]),t._v(" geo_distance query")]),t._v(" "),s("p",[t._v("geo_distance query 可以查找在一个中心点指定范围内的地理点文档。例如，查找距离天津 200km 以内的城市，搜索结果中会返回北京，命令如下：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('GET geo/_search\n{\n\t"query": {\n\t\t"bool": {\n\t\t\t"must": {\n\t\t\t\t"match_all": {}\n\t\t\t},\n\t\t\t"filter": {\n\t\t\t\t"geo_distance": {\n\t\t\t\t\t"distance": "200km",\n\t\t\t\t\t"location": {\n\t\t\t\t\t\t"lat": 39.0851000000,\n\t\t\t\t\t\t"lon": 117.1993700000\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n')])])]),s("p",[t._v("按各城市离北京的距离排序：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('GET geo/_search\n{\n  "query": {\n    "match_all": {}\n  },\n  "sort": [{\n    "_geo_distance": {\n      "location": "39.9088145109,116.3973999023",\n      "unit": "km",\n      "order": "asc",\n      "distance_type": "plane"\n    }\n  }]\n}\n')])])]),s("p",[t._v("其中 location 对应的经纬度字段；unit 为 "),s("code",[t._v("km")]),t._v(" 表示将距离以 "),s("code",[t._v("km")]),t._v(" 为单位写入到每个返回结果的 sort 键中；distance_type 为 "),s("code",[t._v("plane")]),t._v(" 表示使用快速但精度略差的 "),s("code",[t._v("plane")]),t._v(" 计算方式。")]),t._v(" "),s("h3",{attrs:{id:"geo-bounding-box-query"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#geo-bounding-box-query"}},[t._v("#")]),t._v(" geo_bounding_box query")]),t._v(" "),s("p",[t._v("geo_bounding_box query 用于查找落入指定的矩形内的地理坐标。查询中由两个点确定一个矩形，然后在矩形区域内查询匹配的文档。")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('GET geo/_search\n{\n\t"query": {\n\t\t"bool": {\n\t\t\t"must": {\n\t\t\t\t"match_all": {}\n\t\t\t},\n\t\t\t"filter": {\n\t\t\t\t"geo_bounding_box": {\n\t\t\t\t\t"location": {\n\t\t\t\t\t\t"top_left": {\n\t\t\t\t\t\t\t"lat": 38.4864400000,\n\t\t\t\t\t\t\t"lon": 106.2324800000\n\t\t\t\t\t\t},\n\t\t\t\t\t\t"bottom_right": {\n\t\t\t\t\t\t\t"lat": 28.6820200000,\n\t\t\t\t\t\t\t"lon": 115.8579400000\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n')])])]),s("h3",{attrs:{id:"geo-polygon-query"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#geo-polygon-query"}},[t._v("#")]),t._v(" geo_polygon query")]),t._v(" "),s("p",[t._v("geo_polygon query 用于查找在指定"),s("strong",[t._v("多边形")]),t._v("内的地理点。例如，呼和浩特、重庆、上海三地组成一个三角形，查询位置在该三角形区域内的城市，命令如下：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('GET geo/_search\n{\n\t"query": {\n\t\t"bool": {\n\t\t\t"must": {\n\t\t\t\t"match_all": {}\n\t\t\t}\n\t\t},\n\t\t"filter": {\n\t\t\t"geo_polygon": {\n\t\t\t\t"location": {\n\t\t\t\t\t"points": [{\n\t\t\t\t\t\t"lat": 40.8414900000,\n\t\t\t\t\t\t"lon": 111.7519900000\n\t\t\t\t\t}, {\n\t\t\t\t\t\t"lat": 29.5647100000,\n\t\t\t\t\t\t"lon": 106.5507300000\n\t\t\t\t\t}, {\n\t\t\t\t\t\t"lat": 31.2303700000,\n\t\t\t\t\t\t"lon": 121.4737000000\n\t\t\t\t\t}]\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n')])])]),s("h3",{attrs:{id:"geo-shape-query"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#geo-shape-query"}},[t._v("#")]),t._v(" geo_shape query")]),t._v(" "),s("p",[t._v("geo_shape query 用于查询 geo_shape 类型的地理数据，地理形状之间的关系有相交、包含、不相交三种。创建一个新的索引用于测试，其中 location 字段的类型设为 geo_shape 类型。")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('PUT geoshape\n{\n\t"mappings": {\n\t\t"city": {\n\t\t\t"properties": {\n\t\t\t\t"name": {\n\t\t\t\t\t"type": "keyword"\n\t\t\t\t},\n\t\t\t\t"location": {\n\t\t\t\t\t"type": "geo_shape"\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n')])])]),s("p",[t._v("关于经纬度的顺序这里做一个说明，geo_point 类型的字段纬度在前经度在后，但是对于 geo_shape 类型中的点，是经度在前纬度在后，这一点需要特别注意。")]),t._v(" "),s("p",[t._v("把西安和郑州连成的线写入索引：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('POST geoshape/city/1\n{\n\t"name": "西安-郑州",\n\t"location": {\n\t\t"type": "linestring",\n\t\t"coordinates": [\n\t\t\t[108.9398400000, 34.3412700000],\n\t\t\t[113.6587142944, 34.7447157466]\n\t\t]\n\t}\n}\n')])])]),s("p",[t._v("查询包含在由银川和南昌作为对角线上的点组成的矩形的地理形状，由于西安和郑州组成的直线落在该矩形区域内，因此可以被查询到。命令如下：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('GET geoshape/_search\n{\n\t"query": {\n\t\t"bool": {\n\t\t\t"must": {\n\t\t\t\t"match_all": {}\n\t\t\t},\n\t\t\t"filter": {\n\t\t\t\t"geo_shape": {\n\t\t\t\t\t"location": {\n\t\t\t\t\t\t"shape": {\n\t\t\t\t\t\t\t"type": "envelope",\n\t\t\t\t\t\t\t"coordinates": [\n\t\t\t\t\t\t\t\t[106.23248, 38.48644],\n\t\t\t\t\t\t\t\t[115.85794, 28.68202]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t"relation": "within"\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n')])])]),s("h2",{attrs:{id:"特殊查询"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#特殊查询"}},[t._v("#")]),t._v(" 特殊查询")]),t._v(" "),s("h3",{attrs:{id:"more-like-this-query"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#more-like-this-query"}},[t._v("#")]),t._v(" more_like_this query")]),t._v(" "),s("p",[t._v("more_like_this query 可以查询和提供文本类似的文档，通常用于近似文本的推荐等场景。查询命令如下：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('GET books/_search\n{\n\t"query": {\n\t\t"more_like_ this": {\n\t\t\t"fields": ["title", "description"],\n\t\t\t"like": "java virtual machine",\n\t\t\t"min_term_freq": 1,\n\t\t\t"max_query_terms": 12\n\t\t}\n\t}\n}\n')])])]),s("p",[t._v("可选的参数及取值说明如下：")]),t._v(" "),s("ul",[s("li",[t._v("fields 要匹配的字段，默认是 _all 字段。")]),t._v(" "),s("li",[t._v("like 要匹配的文本。")]),t._v(" "),s("li",[t._v("min_term_freq 文档中词项的最低频率，默认是 2，低于此频率的文档会被忽略。")]),t._v(" "),s("li",[t._v("max_query_terms query 中能包含的最大词项数目，默认为 25。")]),t._v(" "),s("li",[t._v("min_doc_freq 最小的文档频率，默认为 5。")]),t._v(" "),s("li",[t._v("max_doc_freq 最大文档频率。")]),t._v(" "),s("li",[t._v("min_word length 单词的最小长度。")]),t._v(" "),s("li",[t._v("max_word length 单词的最大长度。")]),t._v(" "),s("li",[t._v("stop_words 停用词列表。")]),t._v(" "),s("li",[t._v("analyzer 分词器。")]),t._v(" "),s("li",[t._v("minimum_should_match 文档应匹配的最小词项数，默认为 query 分词后词项数的 30%。")]),t._v(" "),s("li",[t._v("boost terms 词项的权重。")]),t._v(" "),s("li",[t._v("include 是否把输入文档作为结果返回。")]),t._v(" "),s("li",[t._v("boost 整个 query 的权重，默认为 1.0。")])]),t._v(" "),s("h3",{attrs:{id:"script-query"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#script-query"}},[t._v("#")]),t._v(" script query")]),t._v(" "),s("p",[t._v("Elasticsearch 支持使用脚本进行查询。例如，查询价格大于 180 的文档，命令如下：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('GET books/_search\n{\n  "query": {\n    "script": {\n      "script": {\n        "inline": "doc[\'price\'].value > 180",\n        "lang": "painless"\n      }\n    }\n  }\n}\n')])])]),s("h3",{attrs:{id:"percolate-query"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#percolate-query"}},[t._v("#")]),t._v(" percolate query")]),t._v(" "),s("p",[t._v("一般情况下，我们是先把文档写入到 Elasticsearch 中，通过查询语句对文档进行搜索。percolate query 则是反其道而行之的做法，它会先注册查询条件，根据文档来查询 query。例如，在 my-index 索引中有一个 laptop 类型，文档有 price 和 name 两个字段，在映射中声明一个 percolator 类型的 query，命令如下：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('PUT my-index\n{\n\t"mappings": {\n\t\t"laptop": {\n\t\t\t"properties": {\n\t\t\t\t"price": { "type": "long" },\n\t\t\t\t"name": { "type": "text" }\n\t\t\t},\n\t\t\t"queries": {\n\t\t\t\t"properties": {\n\t\t\t\t\t"query": { "type": "percolator" }\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n')])])]),s("p",[t._v("注册一个 bool query，bool query 中包含一个 range query，要求 price 字段的取值小于等于 10000，并且 name 字段中含有关键词 macbook：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('PUT /my-index/queries/1?refresh\n{\n\t"query": {\n\t\t"bool": {\n\t\t\t"must": [{\n\t\t\t\t"range": { "price": { "lte": 10000 } }\n\t\t\t}, {\n\t\t\t\t"match": { "name": "macbook" }\n\t\t\t}]\n\t\t}\n\t}\n}\n')])])]),s("p",[t._v("通过文档查询 query：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('GET /my-index/_search\n{\n\t"query": {\n\t\t"percolate": {\n\t\t\t"field": "query",\n\t\t\t"document_type": "laptop",\n\t\t\t"document": {\n\t\t\t\t"price": 9999,\n\t\t\t\t"name": "macbook pro on sale"\n\t\t\t}\n\t\t}\n\t}\n}\n')])])]),s("p",[t._v("文档符合 query 中的条件，返回结果中可以查到上文中注册的 bool query。percolate query 的这种特性适用于数据分类、数据路由、事件监控和预警等场景。")])])}),[],!1,null,null,null);s.default=e.exports}}]);