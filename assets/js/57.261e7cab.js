(window.webpackJsonp=window.webpackJsonp||[]).push([[57],{391:function(t,s,a){"use strict";a.r(s);var n=a(4),e=Object(n.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"elasticsearch-索引"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#elasticsearch-索引"}},[t._v("#")]),t._v(" Elasticsearch 索引")]),t._v(" "),s("h2",{attrs:{id:"索引管理操作"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#索引管理操作"}},[t._v("#")]),t._v(" 索引管理操作")]),t._v(" "),s("p",[t._v("Elasticsearch 索引管理主要包括如何进行索引的创建、索引的删除、副本的更新、索引读写权限、索引别名的配置等等内容。")]),t._v(" "),s("h3",{attrs:{id:"索引删除"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#索引删除"}},[t._v("#")]),t._v(" 索引删除")]),t._v(" "),s("p",[t._v("ES 索引删除操作向 ES 集群的 http 接口发送指定索引的 delete http 请求即可，可以通过 curl 命令，具体如下：")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("curl")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-X")]),t._v(" DELETE http://"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("es_host"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(":"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("es_http_port"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("/"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("index"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("如果删除成功，它会返回如下信息，具体示例如下：")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("curl")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-X")]),t._v(" DELETE http://10.10.10.66:9200/my_index?pretty\n")])])]),s("p",[t._v("为了返回的信息便于读取，增加了 pretty 参数：")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"acknowledged"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h3",{attrs:{id:"索引别名"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#索引别名"}},[t._v("#")]),t._v(" 索引别名")]),t._v(" "),s("p",[t._v("ES 的索引别名就是给一个索引或者多个索引起的另一个名字，典型的应用场景是针对索引使用的平滑切换。")]),t._v(" "),s("p",[t._v("首先，创建索引 my_index，然后将别名 my_alias 指向它，示例如下：")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("PUT /my_index\nPUT /my_index/_alias/my_alias\n")])])]),s("p",[t._v("也可以通过如下形式：")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("POST /_aliases\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"actions"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"add"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"index"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"my_index"')]),t._v(", "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"alias"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"my_alias"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("也可以在一次请求中增加别名和移除别名混合使用：")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("POST /_aliases\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"actions"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"remove"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"index"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"my_index"')]),t._v(", "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"alias"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"my_alias"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"add"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"index"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"my_index_v2"')]),t._v(", "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"alias"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"my_alias"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("blockquote",[s("p",[t._v("需要注意的是，如果别名与索引是一对一的，使用别名索引文档或者查询文档是可以的，但是如果别名和索引是一对多的，使用别名会发生错误，因为 ES 不知道把文档写入哪个索引中去或者从哪个索引中读取文档。")])]),t._v(" "),s("p",[t._v("ES 索引别名有个典型的应用场景是平滑切换，更多细节可以查看 "),s("a",{attrs:{href:"https://www.knowledgedict.com/tutorial/elasticsearch-index-smooth-shift.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Elasticsearch（ES）索引零停机（无需重启）无缝平滑切换的方法"),s("OutboundLink")],1),t._v("。")]),t._v(" "),s("h2",{attrs:{id:"settings-详解"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#settings-详解"}},[t._v("#")]),t._v(" Settings 详解")]),t._v(" "),s("p",[t._v("Elasticsearch 索引的配置项主要分为"),s("strong",[t._v("静态配置属性")]),t._v("和"),s("strong",[t._v("动态配置属性")]),t._v("，静态配置属性是索引创建后不能修改，而动态配置属性则可以随时修改。")]),t._v(" "),s("p",[t._v("ES 索引设置的 api 为 "),s("strong",[s("em",[s("code",[t._v("_settings")])])]),t._v("，完整的示例如下：")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("PUT /my_index\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"settings"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"index"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"number_of_shards"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"1"')]),t._v(",\n      "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"number_of_replicas"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"1"')]),t._v(",\n      "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"refresh_interval"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"60s"')]),t._v(",\n      "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"analysis"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"filter"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"tsconvert"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"type"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"stconvert"')]),t._v(",\n            "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"convert_type"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"t2s"')]),t._v(",\n            "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"delimiter"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('","')]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(",\n          "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"synonym"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"type"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"synonym"')]),t._v(",\n            "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"synonyms_path"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"analysis/synonyms.txt"')]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(",\n        "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"analyzer"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ik_max_word_synonym"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"filter"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n              "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"synonym"')]),t._v(",\n              "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"tsconvert"')]),t._v(",\n              "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"standard"')]),t._v(",\n              "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"lowercase"')]),t._v(",\n              "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"stop"')]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(",\n            "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"tokenizer"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ik_max_word"')]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(",\n          "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ik_smart_synonym"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"filter"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n              "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"synonym"')]),t._v(",\n              "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"standard"')]),t._v(",\n              "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"lowercase"')]),t._v(",\n              "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"stop"')]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(",\n            "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"tokenizer"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ik_smart"')]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(",\n\t\t\t"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"mapping"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t\t"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"coerce"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"false"')]),t._v(",\n\t\t\t\t"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ignore_malformed"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"false"')]),t._v("\n\t\t\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(",\n\t\t\t"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"indexing"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t\t"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"slowlog"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t\t\t"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"threshold"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t\t\t\t"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"index"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t\t\t\t\t"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"warn"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"2s"')]),t._v(",\n\t\t\t\t\t\t\t"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"info"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"1s"')]),t._v("\n\t\t\t\t\t\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t\t\t\t\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t\t\t\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t\t\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(",\n\t\t\t"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"provided_name"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hospital_202101070533"')]),t._v(",\n\t\t\t"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"query"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t\t"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"default_field"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"timestamp"')]),t._v(",\n\t\t\t\t"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"parse"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t\t\t"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"allow_unmapped_fields"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"false"')]),t._v("\n\t\t\t\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t\t\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(",\n\t\t\t"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"requests"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t\t"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"cache"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t\t\t"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"enable"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"true"')]),t._v("\n\t\t\t\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t\t\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(",\n\t\t\t"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"search"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t\t"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"slowlog"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t\t\t"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"threshold"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t\t\t\t"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"fetch"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t\t\t\t\t"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"warn"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"1s"')]),t._v(",\n\t\t\t\t\t\t\t"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"info"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"200ms"')]),t._v("\n\t\t\t\t\t\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(",\n\t\t\t\t\t\t"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"query"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t\t\t\t\t"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"warn"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"1s"')]),t._v(",\n\t\t\t\t\t\t\t"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"info"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"500ms"')]),t._v("\n\t\t\t\t\t\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t\t\t\t\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t\t\t\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t\t\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h3",{attrs:{id:"固定属性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#固定属性"}},[t._v("#")]),t._v(" 固定属性")]),t._v(" "),s("ul",[s("li",[s("strong",[s("em",[s("code",[t._v("index.creation_date")])])]),t._v("：顾名思义索引的创建时间戳。")]),t._v(" "),s("li",[s("strong",[s("em",[s("code",[t._v("index.uuid")])])]),t._v("：索引的 uuid 信息。")]),t._v(" "),s("li",[s("strong",[s("em",[s("code",[t._v("index.version.created")])])]),t._v("：索引的版本号。")])]),t._v(" "),s("h3",{attrs:{id:"索引静态配置"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#索引静态配置"}},[t._v("#")]),t._v(" 索引静态配置")]),t._v(" "),s("ul",[s("li",[s("strong",[s("em",[s("code",[t._v("index.number_of_shards")])])]),t._v("：索引的主分片数，默认值是 "),s("strong",[s("em",[s("code",[t._v("5")])])]),t._v("。这个配置在索引创建后不能修改；在 es 层面，可以通过 "),s("strong",[s("em",[s("code",[t._v("es.index.max_number_of_shards")])])]),t._v(" 属性设置索引最大的分片数，默认为 "),s("strong",[s("em",[s("code",[t._v("1024")])])]),t._v("。")]),t._v(" "),s("li",[s("strong",[s("em",[s("code",[t._v("index.codec")])])]),t._v("：数据存储的压缩算法，默认值为 "),s("strong",[s("em",[s("code",[t._v("LZ4")])])]),t._v("，可选择值还有 "),s("strong",[s("em",[s("code",[t._v("best_compression")])])]),t._v("，它比 LZ4 可以获得更好的压缩比（即占据较小的磁盘空间，但存储性能比 LZ4 低）。")]),t._v(" "),s("li",[s("strong",[s("em",[s("code",[t._v("index.routing_partition_size")])])]),t._v("：路由分区数，如果设置了该参数，其路由算法为："),s("code",[t._v("( hash(_routing) + hash(_id) % index.routing_parttion_size ) % number_of_shards")]),t._v("。如果该值不设置，则路由算法为 "),s("code",[t._v("hash(_routing) % number_of_shardings")]),t._v("，"),s("code",[t._v("_routing")]),t._v(" 默认值为 "),s("code",[t._v("_id")]),t._v("。")])]),t._v(" "),s("p",[t._v("静态配置里，有重要的部分是配置分析器（config analyzers）。")]),t._v(" "),s("ul",[s("li",[s("p",[s("strong",[s("code",[t._v("index.analysis")])])]),t._v(" "),s("p",[t._v("：分析器最外层的配置项，内部主要分为 char_filter、tokenizer、filter 和 analyzer。")]),t._v(" "),s("ul",[s("li",[s("strong",[s("em",[s("code",[t._v("char_filter")])])]),t._v("：定义新的字符过滤器件。")]),t._v(" "),s("li",[s("strong",[s("em",[s("code",[t._v("tokenizer")])])]),t._v("：定义新的分词器。")]),t._v(" "),s("li",[s("strong",[s("em",[s("code",[t._v("filter")])])]),t._v("：定义新的 token filter，如同义词 filter。")]),t._v(" "),s("li",[s("strong",[s("em",[s("code",[t._v("analyzer")])])]),t._v("：配置新的分析器，一般是 char_filter、tokenizer 和一些 token filter 的组合。")])])])]),t._v(" "),s("h3",{attrs:{id:"索引动态配置"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#索引动态配置"}},[t._v("#")]),t._v(" 索引动态配置")]),t._v(" "),s("ul",[s("li",[s("strong",[s("em",[s("code",[t._v("index.number_of_replicas")])])]),t._v("：索引主分片的副本数，默认值是 "),s("strong",[s("em",[s("code",[t._v("1")])])]),t._v("，该值必须大于等于 0，这个配置可以随时修改。")]),t._v(" "),s("li",[s("strong",[s("em",[s("code",[t._v("index.refresh_interval")])])]),t._v("：执行新索引数据的刷新操作频率，该操作使对索引的最新更改对搜索可见，默认为 "),s("strong",[s("em",[s("code",[t._v("1s")])])]),t._v("。也可以设置为 "),s("strong",[s("em",[s("code",[t._v("-1")])])]),t._v(" 以禁用刷新。更详细信息参考 "),s("a",{attrs:{href:"https://www.knowledgedict.com/tutorial/elasticsearch-refresh_interval-settings.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Elasticsearch 动态修改 refresh_interval 刷新间隔设置"),s("OutboundLink")],1),t._v("。")])]),t._v(" "),s("h2",{attrs:{id:"mapping-详解"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#mapping-详解"}},[t._v("#")]),t._v(" Mapping 详解")]),t._v(" "),s("p",[t._v("在 Elasticsearch 中，"),s("strong",[s("code",[t._v("Mapping")])]),t._v("（映射），用来定义一个文档以及其所包含的字段如何被存储和索引，可以在映射中事先定义字段的数据类型、字段的权重、分词器等属性，就如同在关系型数据库中创建数据表时会设置字段的类型。")]),t._v(" "),s("p",[t._v("Mapping 会把 json 文档映射成 Lucene 所需要的扁平格式")]),t._v(" "),s("p",[t._v("一个 Mapping 属于一个索引的 Type")]),t._v(" "),s("ul",[s("li",[t._v("每个文档都属于一个 Type")]),t._v(" "),s("li",[t._v("一个 Type 有一个 Mapping 定义")]),t._v(" "),s("li",[t._v("7.0 开始，不需要在 Mapping 定义中指定 type 信息")])]),t._v(" "),s("h3",{attrs:{id:"映射分类"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#映射分类"}},[t._v("#")]),t._v(" 映射分类")]),t._v(" "),s("p",[t._v("在 Elasticsearch 中，映射可分为静态映射和动态映射。在关系型数据库中写入数据之前首先要建表，在建表语句中声明字段的属性，在 Elasticsearch 中，则不必如此，Elasticsearch 最重要的功能之一就是让你尽可能快地开始探索数据，文档写入 Elasticsearch 中，它会根据字段的类型自动识别，这种机制称为"),s("strong",[t._v("动态映射")]),t._v("，而"),s("strong",[t._v("静态映射")]),t._v("则是写入数据之前对字段的属性进行手工设置。")]),t._v(" "),s("h4",{attrs:{id:"静态映射"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#静态映射"}},[t._v("#")]),t._v(" 静态映射")]),t._v(" "),s("p",[s("strong",[t._v("静态映射")]),t._v("是在创建索引时手工指定索引映射。静态映射和 SQL 中在建表语句中指定字段属性类似。相比动态映射，通过静态映射可以添加更详细、更精准的配置信息。")]),t._v(" "),s("p",[t._v("如何定义一个 Mapping")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("PUT /books\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"mappings"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"type_one"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(". any mappings "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(". "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(",\n        "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"type_two"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(". any mappings "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(". "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(",\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(".\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h4",{attrs:{id:"动态映射"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#动态映射"}},[t._v("#")]),t._v(" 动态映射")]),t._v(" "),s("p",[s("strong",[t._v("动态映射")]),t._v("是一种偷懒的方式，可直接创建索引并写入文档，文档中字段的类型是 Elasticsearch "),s("strong",[t._v("自动识别")]),t._v("的，不需要在创建索引的时候设置字段的类型。在实际项目中，如果遇到的业务在导入数据之前不确定有哪些字段，也不清楚字段的类型是什么，使用动态映射非常合适。当 Elasticsearch 在文档中碰到一个以前没见过的字段时，它会利用动态映射来决定该字段的类型，并自动把该字段添加到映射中，根据字段的取值自动推测字段类型的规则见下表：")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",{staticStyle:{"text-align":"left"}},[t._v("JSON 格式的数据")]),t._v(" "),s("th",{staticStyle:{"text-align":"left"}},[t._v("自动推测的字段类型")])])]),t._v(" "),s("tbody",[s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("null")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("没有字段被添加")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("true or false")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("boolean 类型")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("浮点类型数字")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("float 类型")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("数字")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("long 类型")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("JSON 对象")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("object 类型")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("数组")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("由数组中第一个非空值决定")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("string")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("有可能是 date 类型（若开启日期检测）、double 或 long 类型、text 类型、keyword 类型")])])])]),t._v(" "),s("p",[t._v("下面举一个例子认识动态 mapping，在 Elasticsearch 中创建一个新的索引并查看它的 mapping，命令如下：")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("PUT books\nGET books/_mapping\n")])])]),s("p",[t._v("此时 books 索引的 mapping 是空的，返回结果如下：")]),t._v(" "),s("div",{staticClass:"language-json extra-class"},[s("pre",{pre:!0,attrs:{class:"language-json"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"books"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"mappings"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("再往 books 索引中写入一条文档，命令如下：")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("PUT books/it/1\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"id"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(",\n\t"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"publish_date"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"2019-11-10"')]),t._v(",\n\t"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"name"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"master Elasticsearch"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("文档写入完成之后，再次查看 mapping，返回结果如下：")]),t._v(" "),s("div",{staticClass:"language-json extra-class"},[s("pre",{pre:!0,attrs:{class:"language-json"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"books"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"mappings"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"properties"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"id"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"type"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"long"')]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"name"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"type"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"text"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"fields"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"keyword"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n              "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"type"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"keyword"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n              "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"ignore_above"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("256")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"publish_date"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"type"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"date"')]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("使用动态 mapping 要结合实际业务需求来综合考虑，如果将 Elasticsearch 当作主要的数据存储使用，并且希望出现未知字段时抛出异常来提醒你注意这一问题，那么开启动态 mapping 并不适用。在 mapping 中可以通过 "),s("code",[t._v("dynamic")]),t._v(" 设置来控制是否自动新增字段，接受以下参数：")]),t._v(" "),s("ul",[s("li",[s("strong",[s("code",[t._v("true")])]),t._v("：默认值为 true，自动添加字段。")]),t._v(" "),s("li",[s("strong",[s("code",[t._v("false")])]),t._v("：忽略新的字段。")]),t._v(" "),s("li",[s("strong",[s("code",[t._v("strict")])]),t._v("：严格模式，发现新的字段抛出异常。")])]),t._v(" "),s("h3",{attrs:{id:"基础类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#基础类型"}},[t._v("#")]),t._v(" 基础类型")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",{staticStyle:{"text-align":"left"}},[t._v("类型")]),t._v(" "),s("th",{staticStyle:{"text-align":"left"}},[t._v("关键字")])])]),t._v(" "),s("tbody",[s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("字符串类型")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("string、text、keyword")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("数字类型")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("long、integer、short、byte、double、float、half_float、scaled_float")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("日期类型")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("date")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("布尔类型")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("boolean")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("二进制类型")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("binary")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("范围类型")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("range")])])])]),t._v(" "),s("h3",{attrs:{id:"复杂类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#复杂类型"}},[t._v("#")]),t._v(" 复杂类型")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",{staticStyle:{"text-align":"left"}},[t._v("类型")]),t._v(" "),s("th",{staticStyle:{"text-align":"left"}},[t._v("关键字")])])]),t._v(" "),s("tbody",[s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("数组类型")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("array")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("对象类型")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("object")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("嵌套类型")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("nested")])])])]),t._v(" "),s("h3",{attrs:{id:"特殊类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#特殊类型"}},[t._v("#")]),t._v(" 特殊类型")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",{staticStyle:{"text-align":"left"}},[t._v("类型")]),t._v(" "),s("th",{staticStyle:{"text-align":"left"}},[t._v("关键字")])])]),t._v(" "),s("tbody",[s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("地理类型")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("geo_point")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("地理图形类型")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("geo_shape")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("IP 类型")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("ip")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("范围类型")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("completion")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("令牌计数类型")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("token_count")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("附件类型")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("attachment")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("抽取类型")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("percolator")])])])]),t._v(" "),s("h3",{attrs:{id:"mapping-属性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#mapping-属性"}},[t._v("#")]),t._v(" Mapping 属性")]),t._v(" "),s("p",[t._v("Elasticsearch 的 mapping 中的字段属性非常多，具体如下表格：")]),t._v(" "),s("p",[t._v("| 属性名 | 描述 |\n| :- | :- | |\n| "),s("strong",[s("em",[s("code",[t._v("type")])])]),t._v(" | 字段类型，常用的有 text、integer 等等。 |\n| "),s("strong",[s("em",[s("code",[t._v("index")])])]),t._v(" | 当前字段是否被作为索引。可选值为 "),s("strong",[s("em",[s("code",[t._v("true")])])]),t._v("，默认为 true。 |\n| "),s("strong",[s("em",[s("code",[t._v("store")])])]),t._v(" | 是否存储指定字段，可选值为 "),s("strong",[s("em",[s("code",[t._v("true")])])]),t._v(" | "),s("strong",[s("em",[s("code",[t._v("false")])])]),t._v("，设置 true 意味着需要开辟单独的存储空间为这个字段做存储，而且这个存储是独立于 "),s("strong",[s("em",[s("code",[t._v("_source")])])]),t._v(" 的存储的。 |\n| "),s("strong",[s("em",[s("code",[t._v("norms")])])]),t._v(" | 是否使用归一化因子，可选值为 "),s("strong",[s("em",[s("code",[t._v("true")])])]),t._v(" | "),s("strong",[s("em",[s("code",[t._v("false")])])]),t._v("，不需要对某字段进行打分排序时，可禁用它，节省空间；"),s("em",[t._v("type")]),t._v(" 为 "),s("em",[t._v("text")]),t._v(" 时，默认为 "),s("em",[t._v("true")]),t._v("；而 "),s("em",[t._v("type")]),t._v(" 为 "),s("em",[t._v("keyword")]),t._v(" 时，默认为 "),s("em",[t._v("false")]),t._v("。 |\n| "),s("strong",[s("em",[s("code",[t._v("index_options")])])]),t._v(" | 索引选项控制添加到倒排索引（Inverted Index）的信息，这些信息用于搜索（Search）和高亮显示："),s("strong",[s("em",[s("code",[t._v("docs")])])]),t._v("：只索引文档编号(Doc Number)；"),s("strong",[s("em",[s("code",[t._v("freqs")])])]),t._v("：索引文档编号和词频率（term frequency）；"),s("strong",[s("em",[s("code",[t._v("positions")])])]),t._v("：索引文档编号，词频率和词位置（序号）；"),s("strong",[s("em",[s("code",[t._v("offsets")])])]),t._v("：索引文档编号，词频率，词偏移量（开始和结束位置）和词位置（序号）。默认情况下，被分析的字符串（analyzed string）字段使用 "),s("em",[t._v("positions")]),t._v("，其他字段默认使用 "),s("em",[t._v("docs")]),t._v("。此外，需要注意的是 "),s("em",[t._v("index_option")]),t._v(" 是 elasticsearch 特有的设置属性；临近搜索和短语查询时，"),s("em",[t._v("index_option")]),t._v(" 必须设置为 "),s("em",[t._v("offsets")]),t._v("，同时高亮也可使用 postings highlighter。 |\n| "),s("strong",[s("em",[s("code",[t._v("term_vector")])])]),t._v(" | 索引选项控制词向量相关信息："),s("strong",[s("em",[s("code",[t._v("no")])])]),t._v("：默认值，表示不存储词向量相关信息；"),s("strong",[s("em",[s("code",[t._v("yes")])])]),t._v("：只存储词向量信息；"),s("strong",[s("em",[s("code",[t._v("with_positions")])])]),t._v("：存储词项和词项位置；"),s("strong",[s("em",[s("code",[t._v("with_offsets")])])]),t._v("：存储词项和字符偏移位置；"),s("strong",[s("em",[s("code",[t._v("with_positions_offsets")])])]),t._v("：存储词项、词项位置、字符偏移位置。"),s("em",[t._v("term_vector")]),t._v(" 是 lucene 层面的索引设置。 |\n| "),s("strong",[s("em",[s("code",[t._v("similarity")])])]),t._v(" | 指定文档相似度算法（也可以叫评分模型）："),s("strong",[s("em",[s("code",[t._v("BM25")])])]),t._v("：ES 5 之后的默认设置。 |\n| "),s("strong",[s("em",[s("code",[t._v("copy_to")])])]),t._v(" | 复制到自定义 _all 字段，值是数组形式，即表明可以指定多个自定义的字段。 |\n| "),s("strong",[s("em",[s("code",[t._v("analyzer")])])]),t._v(" | 指定索引和搜索时的分析器，如果同时指定 "),s("em",[t._v("search_analyzer")]),t._v(" 则搜索时会优先使用 "),s("em",[t._v("search_analyzer")]),t._v("。 |\n| "),s("strong",[s("em",[s("code",[t._v("search_analyzer")])])]),t._v(" | 指定搜索时的分析器，搜索时的优先级最高。 |\n| "),s("strong",[s("em",[s("code",[t._v("null_value")])])]),t._v(" | 用于需要对 Null 值实现搜索的场景，只有 Keyword 类型支持此配置。 |")]),t._v(" "),s("h2",{attrs:{id:"索引查询"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#索引查询"}},[t._v("#")]),t._v(" 索引查询")]),t._v(" "),s("h3",{attrs:{id:"多个-index、多个-type-查询"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#多个-index、多个-type-查询"}},[t._v("#")]),t._v(" 多个 index、多个 type 查询")]),t._v(" "),s("p",[t._v("Elasticsearch 的搜索 api 支持"),s("strong",[t._v("一个索引（index）的多个类型（type）查询")]),t._v("以及**多个索引（index）**的查询。")]),t._v(" "),s("p",[t._v("例如，我们可以搜索 twitter 索引下面所有匹配条件的所有类型中文档，如下：")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("GET /twitter/_search?q"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("user:shay\n")])])]),s("p",[t._v("我们也可以搜索一个索引下面指定多个 type 下匹配条件的文档，如下：")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("GET /twitter/tweet,user/_search?q"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("user:banon\n")])])]),s("p",[t._v("我们也可以搜索多个索引下匹配条件的文档，如下：")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("GET /twitter,elasticsearch/_search?q"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("tag:wow\n")])])]),s("p",[t._v("此外我们也可以搜索所有索引下匹配条件的文档，用_all 表示所有索引，如下：")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("GET /_all/_search?q"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("tag:wow\n")])])]),s("p",[t._v("甚至我们可以搜索所有索引及所有 type 下匹配条件的文档，如下：")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("GET /_search?q"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("tag:wow\n")])])]),s("h3",{attrs:{id:"uri-搜索"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#uri-搜索"}},[t._v("#")]),t._v(" URI 搜索")]),t._v(" "),s("p",[t._v("Elasticsearch 支持用 uri 搜索，可用 get 请求里面拼接相关的参数，并用 curl 相关的命令就可以进行测试。")]),t._v(" "),s("p",[t._v("如下有一个示例：")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("GET twitter/_search?q"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("user:kimchy\n")])])]),s("p",[t._v("如下是上一个请求的相应实体：")]),t._v(" "),s("div",{staticClass:"language-json extra-class"},[s("pre",{pre:!0,attrs:{class:"language-json"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"timed_out"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"took"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("62")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"_shards"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"total"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"successful"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"skipped"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"failed"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"hits"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"total"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"max_score"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.3862944")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"hits"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"_index"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"twitter"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"_type"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"_doc"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"_id"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"0"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"_score"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.3862944")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"_source"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"user"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"kimchy"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"date"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"2009-11-15T14:12:12"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"message"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"trying out Elasticsearch"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"likes"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("URI 中允许的参数：")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",{staticStyle:{"text-align":"left"}},[t._v("名称")]),t._v(" "),s("th",{staticStyle:{"text-align":"left"}},[t._v("描述")])])]),t._v(" "),s("tbody",[s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("q")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("查询字符串，映射到 query_string 查询")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("df")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("在查询中未定义字段前缀时使用的默认字段")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("analyzer")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("查询字符串时指定的分词器")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("analyze_wildcard")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("是否允许通配符和前缀查询，默认设置为 false")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("batched_reduce_size")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("应在协调节点上一次减少的分片结果数。如果请求中潜在的分片数量很大，则应将此值用作保护机制，以减少每个搜索请求的内存开销")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("default_operator")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("默认使用的匹配运算符，可以是"),s("em",[t._v("AND")]),t._v("或者"),s("em",[t._v("OR")]),t._v("，默认是"),s("em",[t._v("OR")])])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("lenient")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("如果设置为 true，将会忽略由于格式化引起的问题（如向数据字段提供文本），默认为 false")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("explain")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("对于每个 hit，包含了具体如何计算得分的解释")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("_source")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("请求文档内容的参数，默认 true；设置 false 的话，不返回_source 字段，可以使用**_source_include"),s("strong",[t._v("和")]),t._v("_source_exclude**参数分别指定返回字段和不返回的字段")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("stored_fields")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("指定每个匹配返回的文档中的存储字段，多个用逗号分隔。不指定任何值将导致没有字段返回")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("sort")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("排序方式，可以是"),s("em",[t._v("fieldName")]),t._v("、"),s("em",[t._v("fieldName:asc")]),t._v("或者"),s("em",[t._v("fieldName:desc")]),t._v("的形式。fieldName 可以是文档中的实际字段，也可以是诸如_score 字段，其表示基于分数的排序。此外可以指定多个 sort 参数（顺序很重要）")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("track_scores")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("当排序时，若设置 true，返回每个命中文档的分数")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("track_total_hits")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("是否返回匹配条件命中的总文档数，默认为 true")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("timeout")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("设置搜索的超时时间，默认无超时时间")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("terminate_after")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("在达到查询终止条件之前，指定每个分片收集的最大文档数。如果设置，则在响应中多了一个 terminated_early 的布尔字段，以指示查询执行是否实际上已终止。默认为 no terminate_after")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("from")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("从第几条（索引以 0 开始）结果开始返回，默认为 0")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("size")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("返回命中的文档数，默认为 10")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("search_type")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("搜索的方式，可以是"),s("em",[t._v("dfs_query_then_fetch")]),t._v("或"),s("em",[t._v("query_then_fetch")]),t._v("。默认为"),s("em",[t._v("query_then_fetch")])])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("allow_partial_search_results")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("是否可以返回部分结果。如设置为 false，表示如果请求产生部分结果，则设置为返回整体故障；默认为 true，表示允许请求在超时或部分失败的情况下获得部分结果")])])])]),t._v(" "),s("h3",{attrs:{id:"查询流程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#查询流程"}},[t._v("#")]),t._v(" 查询流程")]),t._v(" "),s("p",[t._v("在 Elasticsearch 中，查询是一个比较复杂的执行模式，因为我们不知道那些 document 会被匹配到，任何一个 shard 上都有可能，所以一个 search 请求必须查询一个索引或多个索引里面的所有 shard 才能完整的查询到我们想要的结果。")]),t._v(" "),s("p",[t._v("找到所有匹配的结果是查询的第一步，来自多个 shard 上的数据集在分页返回到客户端之前会被合并到一个排序后的 list 列表，由于需要经过一步取 top N 的操作，所以 search 需要进过两个阶段才能完成，分别是 query 和 fetch。")]),t._v(" "),s("h2",{attrs:{id:"参考资料"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#参考资料"}},[t._v("#")]),t._v(" 参考资料")]),t._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"https://www.elastic.co/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Elasticsearch 官网"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"https://www.knowledgedict.com/tutorial/elasticsearch-index-mapping.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Elasticsearch 索引映射类型及 mapping 属性详解"),s("OutboundLink")],1)])])])}),[],!1,null,null,null);s.default=e.exports}}]);