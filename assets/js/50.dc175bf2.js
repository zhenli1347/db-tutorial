(window.webpackJsonp=window.webpackJsonp||[]).push([[50],{384:function(s,t,e){"use strict";e.r(t);var a=e(4),r=Object(a.a)({},(function(){var s=this,t=s._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h1",{attrs:{id:"redis-运维"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#redis-运维"}},[s._v("#")]),s._v(" Redis 运维")]),s._v(" "),t("blockquote",[t("p",[t("strong",[s._v("Redis")]),s._v(" 是一个高性能的 key-value 数据库。")]),s._v(" "),t("p",[s._v("SET 操作每秒钟 110000 次；GET 操作每秒钟 81000 次。")])]),s._v(" "),t("h2",{attrs:{id:"一、redis-安装"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#一、redis-安装"}},[s._v("#")]),s._v(" 一、Redis 安装")]),s._v(" "),t("h3",{attrs:{id:"window-下安装"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#window-下安装"}},[s._v("#")]),s._v(" Window 下安装")]),s._v(" "),t("p",[t("strong",[s._v("下载地址：")]),t("a",{attrs:{href:"https://github.com/MSOpenTech/redis/releases",target:"_blank",rel:"noopener noreferrer"}},[s._v("https://github.com/MSOpenTech/redis/releases"),t("OutboundLink")],1),s._v("。")]),s._v(" "),t("p",[s._v("Redis 支持 32 位和 64 位。这个需要根据你系统平台的实际情况选择，这里我们下载 "),t("strong",[s._v("Redis-x64-xxx.zip")]),s._v("压缩包到 C 盘，解压后，将文件夹重新命名为 "),t("strong",[s._v("redis")]),s._v("。")]),s._v(" "),t("p",[s._v("打开一个 "),t("strong",[s._v("cmd")]),s._v(" 窗口 使用 cd 命令切换目录到 "),t("strong",[s._v("C:\\redis")]),s._v(" 运行 "),t("strong",[s._v("redis-server.exe redis.windows.conf")]),s._v(" 。")]),s._v(" "),t("p",[s._v("如果想方便的话，可以把 redis 的路径加到系统的环境变量里，这样就省得再输路径了，后面的那个 redis.windows.conf 可以省略，如果省略，会启用默认的。")]),s._v(" "),t("p",[s._v("这时候另启一个 cmd 窗口，原来的不要关闭，不然就无法访问服务端了。")]),s._v(" "),t("p",[s._v("切换到 redis 目录下运行 "),t("strong",[s._v("redis-cli.exe -h 127.0.0.1 -p 6379")]),s._v(" 。")]),s._v(" "),t("h3",{attrs:{id:"linux-下安装"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#linux-下安装"}},[s._v("#")]),s._v(" Linux 下安装")]),s._v(" "),t("p",[t("strong",[s._v("下载地址：")]),s._v(" http://redis.io/download，下载最新文档版本。")]),s._v(" "),t("p",[s._v("下载、解压、编译 Redis")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("wget")]),s._v(" http://download.redis.io/releases/redis-5.0.4.tar.gz\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("tar")]),s._v(" xzf redis-5.0.4.tar.gz\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("cd")]),s._v(" redis-5.0.4\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("make")]),s._v("\n")])])]),t("p",[s._v("为了编译 Redis 源码，你需要 gcc-c++和 tcl。如果你的系统是 CentOS，可以直接执行命令："),t("code",[s._v("yum install -y gcc-c++ tcl")]),s._v(" 来安装。")]),s._v(" "),t("p",[s._v("进入到解压后的 "),t("code",[s._v("src")]),s._v(" 目录，通过如下命令启动 Redis:")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("src/redis-server\n")])])]),t("p",[s._v("您可以使用内置的客户端与 Redis 进行交互:")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("$ src/redis-cli\nredis"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("set")]),s._v(" foo bar\nOK\nredis"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" get foo\n"),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"bar"')]),s._v("\n")])])]),t("h3",{attrs:{id:"ubuntu-下安装"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#ubuntu-下安装"}},[s._v("#")]),s._v(" Ubuntu 下安装")]),s._v(" "),t("p",[s._v("在 Ubuntu 系统安装 Redis 可以使用以下命令:")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("apt-get")]),s._v(" update\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("apt-get")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" redis-server\n")])])]),t("h3",{attrs:{id:"开机启动"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#开机启动"}},[s._v("#")]),s._v(" 开机启动")]),s._v(" "),t("ul",[t("li",[s._v("开机启动配置："),t("code",[s._v('echo "/usr/local/bin/redis-server /etc/redis.conf" >> /etc/rc.local')])])]),s._v(" "),t("h3",{attrs:{id:"开放防火墙端口"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#开放防火墙端口"}},[s._v("#")]),s._v(" 开放防火墙端口")]),s._v(" "),t("ul",[t("li",[s._v("添加规则："),t("code",[s._v("iptables -I INPUT -p tcp -m tcp --dport 6379 -j ACCEPT")])]),s._v(" "),t("li",[s._v("保存规则："),t("code",[s._v("service iptables save")])]),s._v(" "),t("li",[s._v("重启 iptables："),t("code",[s._v("service iptables restart")])])]),s._v(" "),t("h3",{attrs:{id:"redis-安装脚本"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#redis-安装脚本"}},[s._v("#")]),s._v(" Redis 安装脚本")]),s._v(" "),t("blockquote",[t("p",[s._v("CentOS7 环境安装脚本："),t("a",{attrs:{href:"https://github.com/dunwu/linux-tutorial/tree/master/codes/linux/soft",target:"_blank",rel:"noopener noreferrer"}},[s._v("软件运维配置脚本集合"),t("OutboundLink")],1)])]),s._v(" "),t("p",[t("strong",[s._v("安装说明")])]),s._v(" "),t("ul",[t("li",[s._v("采用编译方式安装 Redis, 并将其注册为 systemd 服务")]),s._v(" "),t("li",[s._v("安装路径为："),t("code",[s._v("/usr/local/redis")])]),s._v(" "),t("li",[s._v("默认下载安装 "),t("code",[s._v("5.0.4")]),s._v(" 版本，端口号为："),t("code",[s._v("6379")]),s._v("，密码为空")])]),s._v(" "),t("p",[t("strong",[s._v("使用方法")])]),s._v(" "),t("ul",[t("li",[s._v("默认安装 - 执行以下任意命令即可：")])]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("curl")]),s._v(" -o- https://gitee.com/turnon/linux-tutorial/raw/master/codes/linux/soft/redis-install.sh "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("bash")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("wget")]),s._v(" -qO- https://gitee.com/turnon/linux-tutorial/raw/master/codes/linux/soft/redis-install.sh "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("bash")]),s._v("\n")])])]),t("ul",[t("li",[s._v("自定义安装 - 下载脚本到本地，并按照以下格式执行：")])]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sh")]),s._v(" redis-install.sh "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("version"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("port"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("password"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n")])])]),t("p",[s._v("参数说明：")]),s._v(" "),t("ul",[t("li",[t("code",[s._v("version")]),s._v(" - redis 版本号")]),s._v(" "),t("li",[t("code",[s._v("port")]),s._v(" - redis 服务端口号")]),s._v(" "),t("li",[t("code",[s._v("password")]),s._v(" - 访问密码")])]),s._v(" "),t("h2",{attrs:{id:"二、redis-单机使用和配置"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#二、redis-单机使用和配置"}},[s._v("#")]),s._v(" 二、Redis 单机使用和配置")]),s._v(" "),t("h3",{attrs:{id:"启动-redis"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#启动-redis"}},[s._v("#")]),s._v(" 启动 Redis")]),s._v(" "),t("p",[t("strong",[s._v("启动 redis 服务")])]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("cd")]),s._v(" /usr/local/redis/src\n./redis-server\n")])])]),t("p",[t("strong",[s._v("启动 redis 客户端")])]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("cd")]),s._v(" /usr/local/redis/src\n./redis-cli\n")])])]),t("p",[t("strong",[s._v("查看 redis 是否启动")])]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("redis-cli\n")])])]),t("p",[s._v("以上命令将打开以下终端：")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("redis "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:637"),t("span",{pre:!0,attrs:{class:"token operator"}},[t("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("9")]),s._v(">")]),s._v("\n")])])]),t("p",[s._v("127.0.0.1 是本机 IP ，6379 是 redis 服务端口。现在我们输入 PING 命令。")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("redis "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:637"),t("span",{pre:!0,attrs:{class:"token operator"}},[t("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("9")]),s._v(">")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("ping")]),s._v("\nPONG\n")])])]),t("p",[s._v("以上说明我们已经成功启动了 redis。")]),s._v(" "),t("h3",{attrs:{id:"redis-常见配置"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#redis-常见配置"}},[s._v("#")]),s._v(" Redis 常见配置")]),s._v(" "),t("blockquote",[t("p",[s._v("Redis 默认的配置文件是根目录下的 "),t("code",[s._v("redis.conf")]),s._v(" 文件。")]),s._v(" "),t("p",[s._v("如果需要指定特定文件作为配置文件，需要使用命令： "),t("code",[s._v("./redis-server -c xxx.conf")])]),s._v(" "),t("p",[s._v("每次修改配置后，需要重启才能生效。")]),s._v(" "),t("p",[s._v("Redis 官方默认配置：")]),s._v(" "),t("ul",[t("li",[s._v("自描述文档 "),t("a",{attrs:{href:"https://raw.githubusercontent.com/antirez/redis/2.8/redis.conf",target:"_blank",rel:"noopener noreferrer"}},[s._v("redis.conf for Redis 2.8"),t("OutboundLink")],1)]),s._v(" "),t("li",[s._v("自描述文档 "),t("a",{attrs:{href:"https://raw.githubusercontent.com/antirez/redis/2.6/redis.conf",target:"_blank",rel:"noopener noreferrer"}},[s._v("redis.conf for Redis 2.6"),t("OutboundLink")],1),s._v(".")]),s._v(" "),t("li",[s._v("自描述文档 "),t("a",{attrs:{href:"https://raw.githubusercontent.com/antirez/redis/2.4/redis.conf",target:"_blank",rel:"noopener noreferrer"}},[s._v("redis.conf for Redis 2.4"),t("OutboundLink")],1),s._v(".")])]),s._v(" "),t("p",[s._v("自 Redis2.6 起就可以直接通过命令行传递 Redis 配置参数。这种方法可以用于测试。自 Redis2.6 起就可以直接通过命令行传递 Redis 配置参数。这种方法可以用于测试。")])]),s._v(" "),t("h3",{attrs:{id:"设为守护进程"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#设为守护进程"}},[s._v("#")]),s._v(" 设为守护进程")]),s._v(" "),t("p",[s._v("Redis 默认以非守护进程方式启动，而通常我们会将 Redis 设为守护进程启动方式，配置："),t("code",[s._v("daemonize yes")])]),s._v(" "),t("h4",{attrs:{id:"远程访问"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#远程访问"}},[s._v("#")]),s._v(" 远程访问")]),s._v(" "),t("p",[s._v("Redis 默认绑定 127.0.0.1，这样就只能本机才能访问，若要 Redis 允许远程访问，需要配置："),t("code",[s._v("bind 0.0.0.0")])]),s._v(" "),t("h4",{attrs:{id:"设置密码"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#设置密码"}},[s._v("#")]),s._v(" 设置密码")]),s._v(" "),t("p",[s._v("Redis 默认访问不需要密码，如果需要设置密码，需要如下配置：")]),s._v(" "),t("ul",[t("li",[t("code",[s._v("protected-mode yes")])]),s._v(" "),t("li",[t("code",[s._v("requirepass <密码>")])])]),s._v(" "),t("h4",{attrs:{id:"配置参数表"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#配置参数表"}},[s._v("#")]),s._v(" 配置参数表")]),s._v(" "),t("table",[t("thead",[t("tr",[t("th",{staticStyle:{"text-align":"left"}},[s._v("配置项")]),s._v(" "),t("th",{staticStyle:{"text-align":"left"}},[s._v("说明")])])]),s._v(" "),t("tbody",[t("tr",[t("td",{staticStyle:{"text-align":"left"}},[t("code",[s._v("daemonize no")])]),s._v(" "),t("td",{staticStyle:{"text-align":"left"}},[s._v("Redis 默认不是以守护进程的方式运行，可以通过该配置项修改，使用 yes 启用守护进程（Windows 不支持守护线程的配置为 no ）")])]),s._v(" "),t("tr",[t("td",{staticStyle:{"text-align":"left"}},[t("code",[s._v("pidfile /var/run/redis.pid")])]),s._v(" "),t("td",{staticStyle:{"text-align":"left"}},[s._v("当 Redis 以守护进程方式运行时，Redis 默认会把 pid 写入 /var/run/redis.pid 文件，可以通过 pidfile 指定")])]),s._v(" "),t("tr",[t("td",{staticStyle:{"text-align":"left"}},[t("code",[s._v("port 6379")])]),s._v(" "),t("td",{staticStyle:{"text-align":"left"}},[s._v("指定 Redis 监听端口，默认端口为 6379，作者在自己的一篇博文中解释了为什么选用 6379 作为默认端口，因为 6379 在手机按键上 MERZ 对应的号码，而 MERZ 取自意大利歌女 Alessia Merz 的名字")])]),s._v(" "),t("tr",[t("td",{staticStyle:{"text-align":"left"}},[t("code",[s._v("bind 127.0.0.1")])]),s._v(" "),t("td",{staticStyle:{"text-align":"left"}},[s._v("绑定的主机地址")])]),s._v(" "),t("tr",[t("td",{staticStyle:{"text-align":"left"}},[t("code",[s._v("timeout 300")])]),s._v(" "),t("td",{staticStyle:{"text-align":"left"}},[s._v("当客户端闲置多长时间后关闭连接，如果指定为 0，表示关闭该功能")])]),s._v(" "),t("tr",[t("td",{staticStyle:{"text-align":"left"}},[t("code",[s._v("loglevel notice")])]),s._v(" "),t("td",{staticStyle:{"text-align":"left"}},[s._v("指定日志记录级别，Redis 总共支持四个级别：debug、verbose、notice、warning，默认为 notice")])]),s._v(" "),t("tr",[t("td",{staticStyle:{"text-align":"left"}},[t("code",[s._v("logfile stdout")])]),s._v(" "),t("td",{staticStyle:{"text-align":"left"}},[s._v("日志记录方式，默认为标准输出，如果配置 Redis 为守护进程方式运行，而这里又配置为日志记录方式为标准输出，则日志将会发送给 /dev/null")])]),s._v(" "),t("tr",[t("td",{staticStyle:{"text-align":"left"}},[t("code",[s._v("databases 16")])]),s._v(" "),t("td",{staticStyle:{"text-align":"left"}},[s._v("设置数据库的数量，默认数据库为 0，可以使用 SELECT 命令在连接上指定数据库 id")])]),s._v(" "),t("tr",[t("td",{staticStyle:{"text-align":"left"}},[t("code",[s._v("save <seconds> <changes>")]),s._v(" Redis 默认配置文件中提供了三个条件："),t("strong",[s._v("save 900 1")]),s._v("、"),t("strong",[s._v("save 300 10")]),s._v("、"),t("strong",[s._v("save 60 10000")]),s._v(" 分别表示 900 秒（15 分钟）内有 1 个更改，300 秒（5 分钟）内有 10 个更改以及 60 秒内有 10000 个更改。")]),s._v(" "),t("td",{staticStyle:{"text-align":"left"}},[s._v("指定在多长时间内，有多少次更新操作，就将数据同步到数据文件，可以多个条件配合")])]),s._v(" "),t("tr",[t("td",{staticStyle:{"text-align":"left"}},[t("code",[s._v("rdbcompression yes")])]),s._v(" "),t("td",{staticStyle:{"text-align":"left"}},[s._v("指定存储至本地数据库时是否压缩数据，默认为 yes，Redis 采用 LZF 压缩，如果为了节省 CPU 时间，可以关闭该选项，但会导致数据库文件变的巨大")])]),s._v(" "),t("tr",[t("td",{staticStyle:{"text-align":"left"}},[t("code",[s._v("dbfilename dump.rdb")])]),s._v(" "),t("td",{staticStyle:{"text-align":"left"}},[s._v("指定本地数据库文件名，默认值为 dump.rdb")])]),s._v(" "),t("tr",[t("td",{staticStyle:{"text-align":"left"}},[t("code",[s._v("dir ./")])]),s._v(" "),t("td",{staticStyle:{"text-align":"left"}},[s._v("指定本地数据库存放目录")])]),s._v(" "),t("tr",[t("td",{staticStyle:{"text-align":"left"}},[t("code",[s._v("slaveof <masterip> <masterport>")])]),s._v(" "),t("td",{staticStyle:{"text-align":"left"}},[s._v("设置当本机为 slav 服务时，设置 master 服务的 IP 地址及端口，在 Redis 启动时，它会自动从 master 进行数据同步")])]),s._v(" "),t("tr",[t("td",{staticStyle:{"text-align":"left"}},[t("code",[s._v("masterauth <master-password>")])]),s._v(" "),t("td",{staticStyle:{"text-align":"left"}},[s._v("当 master 服务设置了密码保护时，slav 服务连接 master 的密码")])]),s._v(" "),t("tr",[t("td",{staticStyle:{"text-align":"left"}},[t("code",[s._v("requirepass foobared")])]),s._v(" "),t("td",{staticStyle:{"text-align":"left"}},[s._v("设置 Redis 连接密码，如果配置了连接密码，客户端在连接 Redis 时需要通过 "),t("code",[s._v("AUTH <password>")]),s._v(" 命令提供密码，默认关闭")])]),s._v(" "),t("tr",[t("td",{staticStyle:{"text-align":"left"}},[t("code",[s._v("maxclients 128")])]),s._v(" "),t("td",{staticStyle:{"text-align":"left"}},[s._v("设置同一时间最大客户端连接数，默认无限制，Redis 可以同时打开的客户端连接数为 Redis 进程可以打开的最大文件描述符数，如果设置 maxclients 0，表示不作限制。当客户端连接数到达限制时，Redis 会关闭新的连接并向客户端返回 max number of clients reached 错误信息")])]),s._v(" "),t("tr",[t("td",{staticStyle:{"text-align":"left"}},[t("code",[s._v("maxmemory <bytes>")])]),s._v(" "),t("td",{staticStyle:{"text-align":"left"}},[s._v("指定 Redis 最大内存限制，Redis 在启动时会把数据加载到内存中，达到最大内存后，Redis 会先尝试清除已到期或即将到期的 Key，当此方法处理 后，仍然到达最大内存设置，将无法再进行写入操作，但仍然可以进行读取操作。Redis 新的 vm 机制，会把 Key 存放内存，Value 会存放在 swap 区")])]),s._v(" "),t("tr",[t("td",{staticStyle:{"text-align":"left"}},[t("code",[s._v("appendonly no")])]),s._v(" "),t("td",{staticStyle:{"text-align":"left"}},[s._v("指定是否在每次更新操作后进行日志记录，Redis 在默认情况下是异步的把数据写入磁盘，如果不开启，可能会在断电时导致一段时间内的数据丢失。因为 redis 本身同步数据文件是按上面 save 条件来同步的，所以有的数据会在一段时间内只存在于内存中。默认为 no")])]),s._v(" "),t("tr",[t("td",{staticStyle:{"text-align":"left"}},[t("code",[s._v("appendfilename appendonly.aof")])]),s._v(" "),t("td",{staticStyle:{"text-align":"left"}},[s._v("指定更新日志文件名，默认为 appendonly.aof")])]),s._v(" "),t("tr",[t("td",{staticStyle:{"text-align":"left"}},[t("code",[s._v("appendfsync everysec")])]),s._v(" "),t("td",{staticStyle:{"text-align":"left"}},[s._v("指定更新日志条件，共有 3 个可选值："),t("strong",[s._v("no")]),s._v("：表示等操作系统进行数据缓存同步到磁盘（快）"),t("strong",[s._v("always")]),s._v("：表示每次更新操作后手动调用 fsync() 将数据写到磁盘（慢，安全）"),t("strong",[s._v("everysec")]),s._v("：表示每秒同步一次（折中，默认值）")])]),s._v(" "),t("tr",[t("td",{staticStyle:{"text-align":"left"}},[t("code",[s._v("vm-enabled no")])]),s._v(" "),t("td",{staticStyle:{"text-align":"left"}},[s._v("指定是否启用虚拟内存机制，默认值为 no，简单的介绍一下，VM 机制将数据分页存放，由 Redis 将访问量较少的页即冷数据 swap 到磁盘上，访问多的页面由磁盘自动换出到内存中（在后面的文章我会仔细分析 Redis 的 VM 机制）")])]),s._v(" "),t("tr",[t("td",{staticStyle:{"text-align":"left"}},[t("code",[s._v("vm-swap-file /tmp/redis.swap")])]),s._v(" "),t("td",{staticStyle:{"text-align":"left"}},[s._v("虚拟内存文件路径，默认值为 /tmp/redis.swap，不可多个 Redis 实例共享")])]),s._v(" "),t("tr",[t("td",{staticStyle:{"text-align":"left"}},[t("code",[s._v("vm-max-memory 0")])]),s._v(" "),t("td",{staticStyle:{"text-align":"left"}},[s._v("将所有大于 vm-max-memory 的数据存入虚拟内存，无论 vm-max-memory 设置多小，所有索引数据都是内存存储的(Redis 的索引数据 就是 keys)，也就是说，当 vm-max-memory 设置为 0 的时候，其实是所有 value 都存在于磁盘。默认值为 0")])]),s._v(" "),t("tr",[t("td",{staticStyle:{"text-align":"left"}},[t("code",[s._v("vm-page-size 32")])]),s._v(" "),t("td",{staticStyle:{"text-align":"left"}},[s._v("Redis swap 文件分成了很多的 page，一个对象可以保存在多个 page 上面，但一个 page 上不能被多个对象共享，vm-page-size 是要根据存储的 数据大小来设定的，作者建议如果存储很多小对象，page 大小最好设置为 32 或者 64bytes；如果存储很大大对象，则可以使用更大的 page，如果不确定，就使用默认值")])]),s._v(" "),t("tr",[t("td",{staticStyle:{"text-align":"left"}},[t("code",[s._v("vm-pages 134217728")])]),s._v(" "),t("td",{staticStyle:{"text-align":"left"}},[s._v("设置 swap 文件中的 page 数量，由于页表（一种表示页面空闲或使用的 bitmap）是在放在内存中的，，在磁盘上每 8 个 pages 将消耗 1byte 的内存。")])]),s._v(" "),t("tr",[t("td",{staticStyle:{"text-align":"left"}},[t("code",[s._v("vm-max-threads 4")])]),s._v(" "),t("td",{staticStyle:{"text-align":"left"}},[s._v("设置访问 swap 文件的线程数,最好不要超过机器的核数,如果设置为 0,那么所有对 swap 文件的操作都是串行的，可能会造成比较长时间的延迟。默认值为 4")])]),s._v(" "),t("tr",[t("td",{staticStyle:{"text-align":"left"}},[t("code",[s._v("glueoutputbuf yes")])]),s._v(" "),t("td",{staticStyle:{"text-align":"left"}},[s._v("设置在向客户端应答时，是否把较小的包合并为一个包发送，默认为开启")])]),s._v(" "),t("tr",[t("td",{staticStyle:{"text-align":"left"}},[t("code",[s._v("hash-max-zipmap-entries 64 hash-max-zipmap-value 512")])]),s._v(" "),t("td",{staticStyle:{"text-align":"left"}},[s._v("指定在超过一定的数量或者最大的元素超过某一临界值时，采用一种特殊的哈希算法")])]),s._v(" "),t("tr",[t("td",{staticStyle:{"text-align":"left"}},[t("code",[s._v("activerehashing yes")])]),s._v(" "),t("td",{staticStyle:{"text-align":"left"}},[s._v("指定是否激活重置哈希，默认为开启（后面在介绍 Redis 的哈希算法时具体介绍）")])]),s._v(" "),t("tr",[t("td",{staticStyle:{"text-align":"left"}},[t("code",[s._v("include /path/to/local.conf")])]),s._v(" "),t("td",{staticStyle:{"text-align":"left"}},[s._v("指定包含其它的配置文件，可以在同一主机上多个 Redis 实例之间使用同一份配置文件，而同时各个实例又拥有自己的特定配置文件")])])])]),s._v(" "),t("h3",{attrs:{id:"压力测试"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#压力测试"}},[s._v("#")]),s._v(" 压力测试")]),s._v(" "),t("blockquote",[t("p",[s._v("参考官方文档："),t("a",{attrs:{href:"https://redis.io/topics/benchmarks",target:"_blank",rel:"noopener noreferrer"}},[s._v("How fast is Redis?"),t("OutboundLink")],1)])]),s._v(" "),t("p",[s._v("Redis 自带了一个性能测试工具："),t("code",[s._v("redis-benchmark")])]),s._v(" "),t("p",[t("strong",[s._v("（1）基本测试")])]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("redis-benchmark "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-q")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-n")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("100000")]),s._v("\n")])])]),t("ul",[t("li",[t("code",[s._v("-q")]),s._v(" 表示静默（quiet）执行")]),s._v(" "),t("li",[t("code",[s._v("-n 100000")]),s._v(" 请求 10 万次")])]),s._v(" "),t("p",[t("strong",[s._v("（2）测试指定读写指令")])]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("$ redis-benchmark "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-t")]),s._v(" set,lpush "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-n")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("100000")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-q")]),s._v("\nSET: "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("74239.05")]),s._v(" requests per second\nLPUSH: "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("79239.30")]),s._v(" requests per second\n")])])]),t("p",[t("strong",[s._v("（3）测试 pipeline 模式下指定读写指令")])]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("redis-benchmark "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-n")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1000000")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-t")]),s._v(" set,get "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-P")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("16")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-q")]),s._v("\nSET: "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("403063.28")]),s._v(" requests per second\nGET: "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("508388.41")]),s._v(" requests per second\n")])])]),t("h2",{attrs:{id:"三、redis-集群使用和配置"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#三、redis-集群使用和配置"}},[s._v("#")]),s._v(" 三、Redis 集群使用和配置")]),s._v(" "),t("p",[s._v("Redis 3.0 后支持集群模式。")]),s._v(" "),t("h3",{attrs:{id:"集群规划"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#集群规划"}},[s._v("#")]),s._v(" 集群规划")]),s._v(" "),t("p",[t("code",[s._v("Redis")]),s._v(" 集群一般由 "),t("strong",[s._v("多个节点")]),s._v(" 组成，节点数量至少为 "),t("code",[s._v("6")]),s._v(" 个，才能保证组成 "),t("strong",[s._v("完整高可用")]),s._v(" 的集群。")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2019/10/10/16db5250b0d1c392?w=1467&h=803&f=png&s=43428",alt:"img"}})]),s._v(" "),t("p",[s._v("理想情况当然是所有节点各自在不同的机器上，首先于资源，本人在部署 Redis 集群时，只得到 3 台服务器。所以，我计划每台服务器部署 2 个 Redis 节点。")]),s._v(" "),t("p",[s._v("【示例】最简高可用 Redis 集群规划")]),s._v(" "),t("p",[s._v("机器配置：16G 内存 + 8 核 CPU + 1T 磁盘")]),s._v(" "),t("p",[s._v("Redis 进程分配 10 G 内存。一般线上生产环境，Redis 的内存尽量不要超过 10g，超过 10g 可能会有问题。")]),s._v(" "),t("p",[s._v("集群拓扑：三主三从；三哨兵，每个哨兵监听所有主节点。")]),s._v(" "),t("p",[s._v("估算性能：")]),s._v(" "),t("ul",[t("li",[s._v("容量：三主，占用 30 G 内存，所以最大存储容量为 30 G。假设每条数据记录平均 大小为 10 K，则最大能存储 300 万条数据。")]),s._v(" "),t("li",[s._v("吞吐量：单机一般 TPS/QPS 为 五万到八万左右。假设为五万，那么三主三从架构理论上能达到 TPS 15 万，QPS 30 万。")])]),s._v(" "),t("h3",{attrs:{id:"部署集群"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#部署集群"}},[s._v("#")]),s._v(" 部署集群")]),s._v(" "),t("blockquote",[t("p",[s._v("Redis 集群节点的安装与单节点服务相同，差异仅在于部署方式。")]),s._v(" "),t("p",[s._v("注意：为了演示方便，本示例将所有 Redis 集群节点都部署在一台机器上，实际生产环境中，基本都会将节点部署在不同机器上。要求更高的，可能还要考虑多机房部署。")])]),s._v(" "),t("p",[s._v("（1）创建节点目录")]),s._v(" "),t("p",[s._v("我个人偏好将软件放在 "),t("code",[s._v("/opt")]),s._v(" 目录下，在我的机器中，Redis 都安装在 "),t("code",[s._v("/usr/local/redis")]),s._v(" 目录下。所以，下面的命令和配置都假设 Redis 安装目录为 "),t("code",[s._v("/usr/local/redis")]),s._v(" 。")]),s._v(" "),t("p",[s._v("确保机器上已经安装了 Redis 后，执行以下命令，创建 Redis 集群节点实例目录：")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("mkdir")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-p")]),s._v(" /usr/local/redis/conf/7001\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("mkdir")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-p")]),s._v(" /usr/local/redis/conf/7002\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("mkdir")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-p")]),s._v(" /usr/local/redis/conf/7003\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("mkdir")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-p")]),s._v(" /usr/local/redis/conf/7004\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("mkdir")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-p")]),s._v(" /usr/local/redis/conf/7005\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("mkdir")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-p")]),s._v(" /usr/local/redis/conf/7006\n")])])]),t("p",[s._v("（2）配置集群节点")]),s._v(" "),t("p",[s._v("每个实例目录下，新建 "),t("code",[s._v("redis.conf")]),s._v(" 配置文件。")]),s._v(" "),t("p",[s._v("实例配置模板以 7001 节点为例（其他节点，完全替换配置中的端口号 7001 即可），如下：")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 端口号")]),s._v("\nport "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("7001")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 绑定的主机端口（0.0.0.0 表示允许远程访问）")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("bind")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.0")]),s._v(".0.0\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 以守护进程方式启动")]),s._v("\ndaemonize "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("yes")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 开启集群模式")]),s._v("\ncluster-enabled "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("yes")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 集群的配置，配置文件首次启动自动生成")]),s._v("\ncluster-config-file /usr/local/redis/conf/7001/7001.conf\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 请求超时时间，设置 10 秒")]),s._v("\ncluster-node-timeout "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("10000")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 开启 AOF 持久化")]),s._v("\nappendonly "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("yes")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 数据存放目录")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("dir")]),s._v(" /usr/local/redis/conf/7001\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 进程文件")]),s._v("\npidfile /usr/local/redis/conf/7001/7001.pid\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 日志文件")]),s._v("\nlogfile /usr/local/redis/conf/7001/7001.log\n")])])]),t("p",[s._v("（3）批量启动 Redis 节点")]),s._v(" "),t("p",[s._v("Redis 的 utils/create-cluster 目录下自带了一个名为 create-cluster 的脚本工具，可以利用它来新建、启动、停止、重启 Redis 节点。")]),s._v(" "),t("p",[s._v("脚本中有几个关键参数：")]),s._v(" "),t("ul",[t("li",[t("code",[s._v("PORT")]),s._v("=30000 - 初始端口号")]),s._v(" "),t("li",[t("code",[s._v("TIMEOUT")]),s._v("=2000 - 超时时间")]),s._v(" "),t("li",[t("code",[s._v("NODES")]),s._v("=6 - 节点数")]),s._v(" "),t("li",[t("code",[s._v("REPLICAS")]),s._v("=1 - 备份数")])]),s._v(" "),t("p",[s._v("脚本中的每个命令项会根据初始端口号，以及设置的节点数，遍历的去执行操作。")]),s._v(" "),t("p",[s._v("由于前面的规划中，节点端口是从 7001 ~ 7006，所以需要将 PORT 变量设为 7000。")]),s._v(" "),t("p",[s._v("脚本中启动每个 Redis 节点是通过指定命令行参数来配置属性。所以，我们需要改一下：")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("PORT")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("7000")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("TIMEOUT")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2000")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("NODES")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("6")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("ENDPORT")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$((")]),s._v("PORT"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v("NODES"),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("))")])]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# ...")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$1")]),s._v('"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"start"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("then")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("while")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$((")]),s._v("PORT "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v(" ENDPORT"),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("))")])]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"0"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("do")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("PORT")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$((")]),s._v("PORT"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("))")])]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Starting '),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$PORT")]),s._v('"')]),s._v("\n        /usr/local/redis/src/redis-server /usr/local/redis/conf/"),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${PORT}")]),s._v("/redis.conf\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("done")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("exit")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("fi")]),s._v("\n")])])]),t("p",[s._v("好了，在每台服务器上，都执行 "),t("code",[s._v("./create-cluster start")]),s._v(" 来启动节点。")]),s._v(" "),t("p",[s._v("然后，通过 ps 命令来确认 Redis 进程是否已经工作：")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# root @ dbClusterDev01 in /usr/local/redis/conf [11:07:55]")]),s._v("\n$ "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("ps")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-ef")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" redis\nroot      "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("4604")]),s._v("     "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("11")]),s._v(":07 ?        00:00:00 /opt/redis/src/redis-server "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.0")]),s._v(".0.0:7001 "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("cluster"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\nroot      "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("4609")]),s._v("     "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("11")]),s._v(":07 ?        00:00:00 /opt/redis/src/redis-server "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.0")]),s._v(".0.0:7002 "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("cluster"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\nroot      "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("4614")]),s._v("     "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("11")]),s._v(":07 ?        00:00:00 /opt/redis/src/redis-server "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.0")]),s._v(".0.0:7003 "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("cluster"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\nroot      "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("4619")]),s._v("     "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("11")]),s._v(":07 ?        00:00:00 /opt/redis/src/redis-server "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.0")]),s._v(".0.0:7004 "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("cluster"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\nroot      "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("4624")]),s._v("     "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("11")]),s._v(":07 ?        00:00:00 /opt/redis/src/redis-server "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.0")]),s._v(".0.0:7005 "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("cluster"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\nroot      "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("4629")]),s._v("     "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("11")]),s._v(":07 ?        00:00:00 /opt/redis/src/redis-server "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.0")]),s._v(".0.0:7006 "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("cluster"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n")])])]),t("p",[s._v("（4）启动集群")]),s._v(" "),t("p",[s._v("通过 "),t("code",[s._v("redis-cli --cluster create")]),s._v(" 命令可以自动配置集群，如下：")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("./redis-cli "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--cluster")]),s._v(" create "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:7001 "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:7002 "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.2:7003 "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.2:7004 "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.3:7005 "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.3:7006 --cluster-replicas "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n")])])]),t("p",[s._v("redis-cluster 会根据设置的节点数和副本数自动分片（分配 Hash 虚拟槽 slot），如果满意，输入 yes ，直接开始分片。")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">>")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" Performing "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("hash")]),s._v(" slots allocation on "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("6")]),s._v(" nodes"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v(".\nMaster"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" -"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" Slots "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" - "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("5460")]),s._v("\nMaster"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" -"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" Slots "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("5461")]),s._v(" - "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("10922")]),s._v("\nMaster"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" -"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" Slots "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("10923")]),s._v(" - "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("16383")]),s._v("\nAdding replica "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.2:7004 to "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:7001\nAdding replica "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.3:7006 to "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.2:7003\nAdding replica "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:7002 to "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.3:7005\nM: b721235997deb6b9a7a2be690b5b9663db8057c6 "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:7001\n   slots:"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("-5460"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("5461")]),s._v(" slots"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" master\nS: bda9b7036df0bbefe601bda4ce45d3787a2e9bd9 "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:7002\n   replicates 3623fff69b5243ed18c02a2fbb6f53069b0f1505\nM: 91523c0391a044da6cc9f53bb965aabe89502187 "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.2:7003\n   slots:"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("5461")]),s._v("-10922"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("5462")]),s._v(" slots"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" master\nS: 9d899cbe49dead7b8c4f769920cdb75714a441ae "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.2:7004\n   replicates b721235997deb6b9a7a2be690b5b9663db8057c6\nM: 3623fff69b5243ed18c02a2fbb6f53069b0f1505 "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.3:7005\n   slots:"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("10923")]),s._v("-16383"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("5461")]),s._v(" slots"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" master\nS: a2869dc153ea4977ca790b76483574a5d56cb40e "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.3:7006\n   replicates 91523c0391a044da6cc9f53bb965aabe89502187\nCan I "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("set")]),s._v(" the above configuration? "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("type "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'yes'")]),s._v(" to accept"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(": "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("yes")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">>")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" Nodes configuration updated\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">>")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" Assign a different config epoch to each "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("node")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">>")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" Sending CLUSTER MEET messages to "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("join")]),s._v(" the cluster\nWaiting "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" the cluster to "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("join")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">>")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" Performing Cluster Check "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("using "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("node")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:7001"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\nM: b721235997deb6b9a7a2be690b5b9663db8057c6 "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:7001\n   slots:"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("-5460"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("5461")]),s._v(" slots"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" master\n   "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" additional replica"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("s"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\nS: a2869dc153ea4977ca790b76483574a5d56cb40e "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:7006\n   slots: "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" slots"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" slave\n   replicates 91523c0391a044da6cc9f53bb965aabe89502187\nM: 91523c0391a044da6cc9f53bb965aabe89502187 "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:7003\n   slots:"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("5461")]),s._v("-10922"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("5462")]),s._v(" slots"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" master\n   "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" additional replica"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("s"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\nM: 3623fff69b5243ed18c02a2fbb6f53069b0f1505 "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:7005\n   slots:"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("10923")]),s._v("-16383"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("5461")]),s._v(" slots"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" master\n   "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" additional replica"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("s"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\nS: 9d899cbe49dead7b8c4f769920cdb75714a441ae "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:7004\n   slots: "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" slots"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" slave\n   replicates b721235997deb6b9a7a2be690b5b9663db8057c6\nS: bda9b7036df0bbefe601bda4ce45d3787a2e9bd9 "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:7002\n   slots: "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" slots"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" slave\n   replicates 3623fff69b5243ed18c02a2fbb6f53069b0f1505\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("OK"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" All nodes agree about slots configuration.\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">>")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" Check "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("open")]),s._v(" slots"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v(".\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">>")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" Check slots coverage"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v(".\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("OK"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" All "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("16384")]),s._v(" slots covered.\n")])])]),t("p",[s._v("（5）日常维护操作")]),s._v(" "),t("ul",[t("li",[s._v("关闭集群 - "),t("code",[s._v("./create-cluster stop")])]),s._v(" "),t("li",[s._v("检查集群是否健康（指定任意节点即可）："),t("code",[s._v("./redis-cli --cluster check <ip:port>")])]),s._v(" "),t("li",[s._v("尝试修复集群节点："),t("code",[s._v("./redis-cli --cluster fix <ip:port>")])])]),s._v(" "),t("h3",{attrs:{id:"部署哨兵"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#部署哨兵"}},[s._v("#")]),s._v(" 部署哨兵")]),s._v(" "),t("p",[s._v("redis-cluster 实现了 Redis 的分片、复制。")]),s._v(" "),t("p",[s._v("但 redis-cluster 没有解决故障转移问题，一旦任意分片的 Master 节点宕机、网络不通，就会导致 redis-cluster 的集群不能工作。为了解决高可用的问题，Redis 提供了 Redis 哨兵来监控 Redis 节点状态，并且会在 Master 宕机时，发起选举，将这个 Master 的一个 Slave 节点选举为 Master。")]),s._v(" "),t("p",[s._v("（1）创建节点目录")]),s._v(" "),t("p",[s._v("我个人偏好将软件放在 "),t("code",[s._v("/opt")]),s._v(" 目录下，在我的机器中，Redis 都安装在 "),t("code",[s._v("/usr/local/redis")]),s._v(" 目录下。所以，下面的命令和配置都假设 Redis 安装目录为 "),t("code",[s._v("/usr/local/redis")]),s._v(" 。")]),s._v(" "),t("p",[s._v("确保机器上已经安装了 Redis 后，执行以下命令，创建 Redis 集群节点实例目录：")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("mkdir")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-p")]),s._v(" /usr/local/redis/conf/27001\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("mkdir")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-p")]),s._v(" /usr/local/redis/conf/27002\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("mkdir")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-p")]),s._v(" /usr/local/redis/conf/27003\n")])])]),t("p",[s._v("（2）配置集群节点")]),s._v(" "),t("p",[s._v("每个实例目录下，新建 "),t("code",[s._v("redis.conf")]),s._v(" 配置文件。")]),s._v(" "),t("p",[s._v("实例配置模板以 7001 节点为例（其他节点，完全替换配置中的端口号 7001 即可），如下：")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("port "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("27001")]),s._v("\ndaemonize "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("yes")]),s._v("\nsentinel monitor redis-master "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("172.22")]),s._v(".6.3 "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("7001")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v("\nsentinel down-after-milliseconds redis-master "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("5000")]),s._v("\nsentinel failover-timeout redis-master "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("900000")]),s._v("\nsentinel parallel-syncs redis-master "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#sentinel auth-pass redis-master 123456")]),s._v("\nlogfile /usr/local/redis/conf/27001/27001.log\n")])])]),t("p",[s._v("（3）批量启动哨兵节点")]),s._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("/opt/redis/src/redis-sentinel /usr/local/redis/conf/27001/sentinel.conf\n/opt/redis/src/redis-sentinel /usr/local/redis/conf/27002/sentinel.conf\n/opt/redis/src/redis-sentinel /usr/local/redis/conf/27003/sentinel.conf\n")])])]),t("h3",{attrs:{id:"扩容"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#扩容"}},[s._v("#")]),s._v(" 扩容")]),s._v(" "),t("p",[s._v("（1）查看信息")]),s._v(" "),t("p",[s._v("进入任意节点")]),s._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("./redis-cli -h 172.22.6.3 -p 7001\n")])])]),t("p",[s._v("cluster info 查看集群节点状态")]),s._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("172.22.6.3:7001> cluster nodes\nf158bf70bb2767cac271ce4efcfc14ba0b7ca98b 172.22.6.3:7006@17006 slave e7aa182e756b76ec85b471797db9b66e4b2da725 0 1594528179000 6 connected\nf348e67648460c7a800120d69b4977bf2e4524cb 172.22.6.3:7001@17001 myself,master - 0 1594528179000 1 connected 0-5460\n52601e2d4af0e64b83f4cc6d20e8316d0ac38b99 172.22.6.3:7004@17004 slave 4802fafe897160c46392c6e569d6f5e466cca696 0 1594528178000 4 connected\nc6c6a68674ae8aac3c6ec792c8af4dc1228c6c31 172.22.6.3:7005@17005 slave f348e67648460c7a800120d69b4977bf2e4524cb 0 1594528179852 5 connected\ne7aa182e756b76ec85b471797db9b66e4b2da725 172.22.6.3:7002@17002 master - 0 1594528178000 2 connected 5461-10922\n4802fafe897160c46392c6e569d6f5e466cca696 172.22.6.3:7003@17003 master - 0 1594528178000 3 connected 10923-16383\n")])])]),t("p",[s._v("cluster info 查看集群信息")]),s._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("172.22.6.3:7001> cluster info\ncluster_state:ok\ncluster_slots_assigned:16384\ncluster_slots_ok:16384\ncluster_slots_pfail:0\ncluster_slots_fail:0\ncluster_known_nodes:6\ncluster_size:3\ncluster_current_epoch:6\ncluster_my_epoch:1\ncluster_stats_messages_ping_sent:3406\ncluster_stats_messages_pong_sent:3569\ncluster_stats_messages_publish_sent:5035\ncluster_stats_messages_sent:12010\ncluster_stats_messages_ping_received:3564\ncluster_stats_messages_pong_received:3406\ncluster_stats_messages_meet_received:5\ncluster_stats_messages_publish_received:5033\ncluster_stats_messages_received:12008\n")])])]),t("p",[s._v("（2）添加节点到集群")]),s._v(" "),t("p",[s._v("将已启动的节点实例添加到集群中")]),s._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("redis-cli --cluster add-node 127.0.0.1:7007 127.0.0.1:7008\n")])])]),t("p",[t("strong",[s._v("添加主节点")])]),s._v(" "),t("p",[s._v("添加一组主节点")]),s._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("./redis-cli --cluster add-node 172.22.6.3:7007 172.22.6.3:7001\n./redis-cli --cluster add-node 172.22.6.3:7008 172.22.6.3:7001\n./redis-cli --cluster add-node 172.22.6.3:7009 172.22.6.3:7001\n")])])]),t("p",[s._v("查看节点状态")]),s._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("172.22.6.3:7001> cluster nodes\nf158bf70bb2767cac271ce4efcfc14ba0b7ca98b 172.22.6.3:7006@17006 slave e7aa182e756b76ec85b471797db9b66e4b2da725 0 1594529342575 6 connected\nf348e67648460c7a800120d69b4977bf2e4524cb 172.22.6.3:7001@17001 myself,master - 0 1594529340000 1 connected 0-5460\n55cacf121662833a4a19dbeb4a5df712cfedf77f 172.22.6.3:7009@17009 master - 0 1594529342000 0 connected\nc6c6a68674ae8aac3c6ec792c8af4dc1228c6c31 172.22.6.3:7005@17005 slave f348e67648460c7a800120d69b4977bf2e4524cb 0 1594529341573 5 connected\n4802fafe897160c46392c6e569d6f5e466cca696 172.22.6.3:7003@17003 master - 0 1594529343577 3 connected 10923-16383\ne7aa182e756b76ec85b471797db9b66e4b2da725 172.22.6.3:7002@17002 master - 0 1594529342000 2 connected 5461-10922\ne5ba78fe629115977a74fbbe1478caf8868d6d55 172.22.6.3:7007@17007 master - 0 1594529341000 0 connected\n52601e2d4af0e64b83f4cc6d20e8316d0ac38b99 172.22.6.3:7004@17004 slave 4802fafe897160c46392c6e569d6f5e466cca696 0 1594529340000 4 connected\n79d4fffc2cec210556c3b4c44e63ab506e87eda3 172.22.6.3:7008@17008 master - 0 1594529340000 7 connected\n")])])]),t("p",[s._v("可以发现，新加入的三个主节点，还没有分配哈希槽，所以，暂时还无法访问。")]),s._v(" "),t("p",[t("strong",[s._v("添加从节点")])]),s._v(" "),t("p",[s._v("--slave：设置该参数，则新节点以 slave 的角色加入集群"),t("br"),s._v("\n--master-id：这个参数需要设置了--slave 才能生效，--master-id 用来指定新节点的 master 节点。如果不设置该参数，则会随机为节点选择 master 节点。")]),s._v(" "),t("p",[s._v("语法")]),s._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("redis-cli --cluster add-node  新节点IP地址：端口    存在节点IP：端口 --cluster-slave （从节点） --cluster-master-id （master节点的ID）\nredis-cli --cluster add-node   10.42.141.119:6379  10.42.166.105:6379  --cluster-slave   --cluster-master-id  dfa238fff8a7a49230cff7eb74f573f5645c8ec5\n")])])]),t("p",[s._v("示例")]),s._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("./redis-cli --cluster add-node 172.22.6.3:7010 172.22.6.3:7007 --cluster-slave\n./redis-cli --cluster add-node 172.22.6.3:7011 172.22.6.3:7008 --cluster-slave\n./redis-cli --cluster add-node 172.22.6.3:7012 172.22.6.3:7009 --cluster-slave\n")])])]),t("p",[s._v("查看状态")]),s._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("172.22.6.3:7001> cluster nodes\nef5c1b9ce4cc795dc12b2c1e8736a572647b4c3e 172.22.6.3:7011@17011 slave 79d4fffc2cec210556c3b4c44e63ab506e87eda3 0 1594529492043 7 connected\nf158bf70bb2767cac271ce4efcfc14ba0b7ca98b 172.22.6.3:7006@17006 slave e7aa182e756b76ec85b471797db9b66e4b2da725 0 1594529491943 6 connected\nf348e67648460c7a800120d69b4977bf2e4524cb 172.22.6.3:7001@17001 myself,master - 0 1594529488000 1 connected 0-5460\n5140d1129ed850df59c51cf818c4eb74545d9959 172.22.6.3:7010@17010 slave e5ba78fe629115977a74fbbe1478caf8868d6d55 0 1594529488000 0 connected\n55cacf121662833a4a19dbeb4a5df712cfedf77f 172.22.6.3:7009@17009 master - 0 1594529488000 8 connected\nc6c6a68674ae8aac3c6ec792c8af4dc1228c6c31 172.22.6.3:7005@17005 slave f348e67648460c7a800120d69b4977bf2e4524cb 0 1594529490000 5 connected\n4802fafe897160c46392c6e569d6f5e466cca696 172.22.6.3:7003@17003 master - 0 1594529489939 3 connected 10923-16383\ne7aa182e756b76ec85b471797db9b66e4b2da725 172.22.6.3:7002@17002 master - 0 1594529491000 2 connected 5461-10922\ne5ba78fe629115977a74fbbe1478caf8868d6d55 172.22.6.3:7007@17007 master - 0 1594529490942 0 connected\n52601e2d4af0e64b83f4cc6d20e8316d0ac38b99 172.22.6.3:7004@17004 slave 4802fafe897160c46392c6e569d6f5e466cca696 0 1594529491000 4 connected\n02e9f57b5b45c350dc57acf1c8efa8db136db7b7 172.22.6.3:7012@17012 master - 0 1594529489000 0 connected\n79d4fffc2cec210556c3b4c44e63ab506e87eda3 172.22.6.3:7008@17008 master - 0 1594529489000 7 connected\n")])])]),t("p",[s._v("分配哈希槽")]),s._v(" "),t("p",[s._v("执行 "),t("code",[s._v("./redis-cli --cluster rebalance 172.22.6.3:7001 --cluster-threshold 1 --cluster-use-empty-masters")])]),s._v(" "),t("p",[s._v("参数说明：")]),s._v(" "),t("p",[s._v("rebalance：表明让 Redis 自动根据节点数进行均衡哈希槽分配。")]),s._v(" "),t("p",[s._v("--cluster-use-empty-masters：表明")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://raw.githubusercontent.com/dunwu/images/dev/snap/20200712125827.png",alt:"img"}})]),s._v(" "),t("p",[s._v("执行结束后，查看状态：")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://raw.githubusercontent.com/dunwu/images/dev/snap/20200712130234.png",alt:"img"}})]),s._v(" "),t("h2",{attrs:{id:"四、redis-命令"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#四、redis-命令"}},[s._v("#")]),s._v(" 四、Redis 命令")]),s._v(" "),t("h3",{attrs:{id:"通用命令"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#通用命令"}},[s._v("#")]),s._v(" 通用命令")]),s._v(" "),t("blockquote",[t("p",[s._v("命令详细用法，请参考 "),t("a",{attrs:{href:"https://redis.io/commands",target:"_blank",rel:"noopener noreferrer"}},[t("strong",[s._v("Redis 命令官方文档")]),t("OutboundLink")],1)]),s._v(" "),t("p",[s._v("搬迁两张 cheat sheet 图，原址：https://www.cheatography.com/tasjaevan/cheat-sheets/redis/")])]),s._v(" "),t("p",[t("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2019/10/10/16db5250b0b8ea57?w=2230&h=2914&f=png&s=246433",alt:"img"}})]),s._v(" "),t("p",[t("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2019/10/10/16db5250b0e9ba3c?w=2229&h=2890&f=png&s=192997",alt:"img"}})]),s._v(" "),t("h3",{attrs:{id:"集群命令"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#集群命令"}},[s._v("#")]),s._v(" 集群命令")]),s._v(" "),t("ul",[t("li",[t("strong",[s._v("集群")]),s._v(" "),t("ul",[t("li",[t("code",[s._v("cluster info")]),s._v(" - 打印集群的信息")]),s._v(" "),t("li",[t("code",[s._v("cluster nodes")]),s._v(" - 列出集群当前已知的所有节点（ node），以及这些节点的相关信息。")])])]),s._v(" "),t("li",[t("strong",[s._v("节点")]),s._v(" "),t("ul",[t("li",[t("code",[s._v("cluster meet <ip> <port>")]),s._v(" - 将 ip 和 port 所指定的节点添加到集群当中，让它成为集群的一份子。")]),s._v(" "),t("li",[t("code",[s._v("cluster forget <node_id>")]),s._v(" - 从集群中移除 node_id 指定的节点。")]),s._v(" "),t("li",[t("code",[s._v("cluster replicate <node_id>")]),s._v(" - 将当前节点设置为 node_id 指定的节点的从节点。")]),s._v(" "),t("li",[t("code",[s._v("cluster saveconfig")]),s._v(" - 将节点的配置文件保存到硬盘里面。")])])]),s._v(" "),t("li",[t("strong",[s._v("槽(slot)")]),s._v(" "),t("ul",[t("li",[t("code",[s._v("cluster addslots <slot> [slot ...]")]),s._v(" - 将一个或多个槽（ slot）指派（ assign）给当前节点。")]),s._v(" "),t("li",[t("code",[s._v("cluster delslots <slot> [slot ...]")]),s._v(" - 移除一个或多个槽对当前节点的指派。")]),s._v(" "),t("li",[t("code",[s._v("cluster flushslots")]),s._v(" - 移除指派给当前节点的所有槽，让当前节点变成一个没有指派任何槽的节点。")]),s._v(" "),t("li",[t("code",[s._v("cluster setslot <slot> node <node_id>")]),s._v(" - 将槽 slot 指派给 node_id 指定的节点，如果槽已经指派给另一个节点，那么先让另一个节点删除该槽>，然后再进行指派。")]),s._v(" "),t("li",[t("code",[s._v("cluster setslot <slot> migrating <node_id>")]),s._v(" - 将本节点的槽 slot 迁移到 node_id 指定的节点中。")]),s._v(" "),t("li",[t("code",[s._v("cluster setslot <slot> importing <node_id>")]),s._v(" - 从 node_id 指定的节点中导入槽 slot 到本节点。")]),s._v(" "),t("li",[t("code",[s._v("cluster setslot <slot> stable")]),s._v(" - 取消对槽 slot 的导入（ import）或者迁移（ migrate）。")])])]),s._v(" "),t("li",[t("strong",[s._v("键")]),s._v(" "),t("ul",[t("li",[t("code",[s._v("cluster keyslot <key>")]),s._v(" - 计算键 key 应该被放置在哪个槽上。")]),s._v(" "),t("li",[t("code",[s._v("cluster countkeysinslot <slot>")]),s._v(" - 返回槽 slot 目前包含的键值对数量。")]),s._v(" "),t("li",[t("code",[s._v("cluster getkeysinslot <slot> <count>")]),s._v(" - 返回 count 个 slot 槽中的键。")])])])]),s._v(" "),t("h4",{attrs:{id:"重新分片"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#重新分片"}},[s._v("#")]),s._v(" 重新分片")]),s._v(" "),t("p",[s._v("添加节点：./redis-cli --cluster add-node 192.168.1.136:7007 192.168.1.136:7001 --cluster-slave")]),s._v(" "),t("p",[s._v("redis-cli --cluster reshard 172.22.6.3 7001")]),s._v(" "),t("h2",{attrs:{id:"五、客户端"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#五、客户端"}},[s._v("#")]),s._v(" 五、客户端")]),s._v(" "),t("p",[s._v("推荐使用 "),t("a",{attrs:{href:"https://github.com/uglide/RedisDesktopManager",target:"_blank",rel:"noopener noreferrer"}},[t("strong",[s._v("RedisDesktopManager")]),t("OutboundLink")],1)]),s._v(" "),t("h2",{attrs:{id:"参考资料"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#参考资料"}},[s._v("#")]),s._v(" 参考资料")]),s._v(" "),t("ul",[t("li",[t("strong",[s._v("官网")]),s._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"https://redis.io/",target:"_blank",rel:"noopener noreferrer"}},[s._v("Redis 官网"),t("OutboundLink")],1)]),s._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/antirez/redis",target:"_blank",rel:"noopener noreferrer"}},[s._v("Redis github"),t("OutboundLink")],1)]),s._v(" "),t("li",[t("a",{attrs:{href:"http://redis.cn/",target:"_blank",rel:"noopener noreferrer"}},[s._v("Redis 官方文档中文版"),t("OutboundLink")],1)])])]),s._v(" "),t("li",[t("strong",[s._v("书籍")]),s._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"https://item.jd.com/11791607.html",target:"_blank",rel:"noopener noreferrer"}},[s._v("《Redis 实战》"),t("OutboundLink")],1)]),s._v(" "),t("li",[t("a",{attrs:{href:"https://item.jd.com/11486101.html",target:"_blank",rel:"noopener noreferrer"}},[s._v("《Redis 设计与实现》"),t("OutboundLink")],1)])])]),s._v(" "),t("li",[t("strong",[s._v("教程")]),s._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"http://redisdoc.com/",target:"_blank",rel:"noopener noreferrer"}},[s._v("Redis 命令参考"),t("OutboundLink")],1)])])]),s._v(" "),t("li",[t("strong",[s._v("文章")]),s._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"https://juejin.im/post/5b8fc5536fb9a05d2d01fb11",target:"_blank",rel:"noopener noreferrer"}},[s._v("深入剖析 Redis 系列(三) - Redis 集群模式搭建与原理详解"),t("OutboundLink")],1)])])])])])}),[],!1,null,null,null);t.default=r.exports}}]);